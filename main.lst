                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _loadSprites
                                     13 	.globl _setBackground
                                     14 	.globl _setupCharacter
                                     15 	.globl _playerMovement
                                     16 	.globl _moveCharacter
                                     17 	.globl _LoadCharacterFrame
                                     18 	.globl _setupSprites
                                     19 	.globl _scrollSprite
                                     20 	.globl _moveSprite
                                     21 	.globl _LoadSpriteFrame
                                     22 	.globl _set_sprite_data
                                     23 	.globl _set_bkg_tiles
                                     24 	.globl _set_bkg_data
                                     25 	.globl _wait_vbl_done
                                     26 	.globl _joypad
                                     27 	.globl _Wine
                                     28 	.globl _Bartender
                                     29 	.globl _BackgroundTiles
                                     30 	.globl _backgroundmap
                                     31 	.globl _bartender
                                     32 	.globl _wineglass
                                     33 ;--------------------------------------------------------
                                     34 ; special function registers
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _DATA
      000000                         40 _wineglass::
      000000                         41 	.ds 12
      00000C                         42 _bartender::
      00000C                         43 	.ds 12
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _INITIALIZED
      000000                         48 _backgroundmap::
      000000                         49 	.ds 360
      000168                         50 _BackgroundTiles::
      000168                         51 	.ds 304
      000298                         52 _Bartender::
      000298                         53 	.ds 64
      0002D8                         54 _Wine::
      0002D8                         55 	.ds 16
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DABS (ABS)
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _GSINIT
                                     65 	.area _GSFINAL
                                     66 	.area _GSINIT
                                     67 ;--------------------------------------------------------
                                     68 ; Home
                                     69 ;--------------------------------------------------------
                                     70 	.area _HOME
                                     71 	.area _HOME
                                     72 ;--------------------------------------------------------
                                     73 ; code
                                     74 ;--------------------------------------------------------
                                     75 	.area _CODE
                                     76 ;spritestructs.h:35: void LoadSpriteFrame(Sprite *sprite, uint8_t frame)
                                     77 ;	---------------------------------
                                     78 ; Function LoadSpriteFrame
                                     79 ; ---------------------------------
      000000                         80 _LoadSpriteFrame::
      000000 E8 FC            [16]   81 	add	sp, #-4
      000002 4B               [ 4]   82 	ld	c, e
      000003 42               [ 4]   83 	ld	b, d
      000004 5F               [ 4]   84 	ld	e, a
                                     85 ;spritestructs.h:37: sprite->spritecurrentFrame = frame;
      000005 21 04 00         [12]   86 	ld	hl, #0x0004
      000008 09               [ 8]   87 	add	hl, bc
      000009 73               [ 8]   88 	ld	(hl), e
                                     89 ;spritestructs.h:39: uint8_t spriteCount = sprite->spriteWidth + sprite->spriteHeight;
      00000A 59               [ 4]   90 	ld	e, c
      00000B 50               [ 4]   91 	ld	d, b
      00000C 13               [ 8]   92 	inc	de
      00000D 13               [ 8]   93 	inc	de
      00000E 1A               [ 8]   94 	ld	a, (de)
      00000F 69               [ 4]   95 	ld	l, c
                                     96 ;	spillPairReg hl
                                     97 ;	spillPairReg hl
      000010 60               [ 4]   98 	ld	h, b
                                     99 ;	spillPairReg hl
                                    100 ;	spillPairReg hl
      000011 23               [ 8]  101 	inc	hl
      000012 5E               [ 8]  102 	ld	e, (hl)
      000013 83               [ 4]  103 	add	a, e
      000014 F8 00            [12]  104 	ldhl	sp,	#0
      000016 77               [ 8]  105 	ld	(hl), a
                                    106 ;spritestructs.h:41: for (uint8_t i = 0; i != spriteCount; i++)
      000017 21 05 00         [12]  107 	ld	hl, #0x0005
      00001A 09               [ 8]  108 	add	hl, bc
      00001B E5               [16]  109 	push	hl
      00001C 7D               [ 4]  110 	ld	a, l
      00001D F8 03            [12]  111 	ldhl	sp,	#3
      00001F 77               [ 8]  112 	ld	(hl), a
      000020 E1               [12]  113 	pop	hl
      000021 7C               [ 4]  114 	ld	a, h
      000022 F8 02            [12]  115 	ldhl	sp,	#2
      000024 22               [ 8]  116 	ld	(hl+), a
      000025 36 00            [12]  117 	ld	(hl), #0x00
      000027                        118 00104$:
      000027 F8 00            [12]  119 	ldhl	sp,	#0
      000029 7E               [ 8]  120 	ld	a, (hl)
      00002A F8 03            [12]  121 	ldhl	sp,	#3
      00002C 96               [ 8]  122 	sub	a, (hl)
      00002D 28 1F            [12]  123 	jr	Z, 00106$
                                    124 ;spritestructs.h:43: set_sprite_tile(sprite->spriteID + i, sprite->tilesetStart + i);
      00002F F8 01            [12]  125 	ldhl	sp,#1
      000031 2A               [ 8]  126 	ld	a, (hl+)
      000032 5F               [ 4]  127 	ld	e, a
      000033 2A               [ 8]  128 	ld	a, (hl+)
      000034 57               [ 4]  129 	ld	d, a
      000035 1A               [ 8]  130 	ld	a, (de)
      000036 86               [ 8]  131 	add	a, (hl)
      000037 5F               [ 4]  132 	ld	e, a
      000038 0A               [ 8]  133 	ld	a, (bc)
      000039 86               [ 8]  134 	add	a, (hl)
      00003A 57               [ 4]  135 	ld	d, a
                                    136 ;c:\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00003B 26 00            [ 8]  137 	ld	h, #0x00
                                    138 ;	spillPairReg hl
                                    139 ;	spillPairReg hl
      00003D 6A               [ 4]  140 	ld	l, d
      00003E 29               [ 8]  141 	add	hl, hl
      00003F 29               [ 8]  142 	add	hl, hl
      000040 D5               [16]  143 	push	de
      000041 11r00r00         [12]  144 	ld	de, #_shadow_OAM
      000044 19               [ 8]  145 	add	hl, de
      000045 23               [ 8]  146 	inc	hl
      000046 23               [ 8]  147 	inc	hl
      000047 D1               [12]  148 	pop	de
      000048 73               [ 8]  149 	ld	(hl), e
                                    150 ;spritestructs.h:41: for (uint8_t i = 0; i != spriteCount; i++)
      000049 F8 03            [12]  151 	ldhl	sp,	#3
      00004B 34               [12]  152 	inc	(hl)
      00004C 18 D9            [12]  153 	jr	00104$
      00004E                        154 00106$:
                                    155 ;spritestructs.h:45: }
      00004E E8 04            [16]  156 	add	sp, #4
      000050 C9               [16]  157 	ret
                                    158 ;spritestructs.h:47: void moveSprite (Sprite *sprite, uint8_t x, uint8_t y)
                                    159 ;	---------------------------------
                                    160 ; Function moveSprite
                                    161 ; ---------------------------------
      000051                        162 _moveSprite::
      000051 E8 F8            [16]  163 	add	sp, #-8
      000053 4B               [ 4]  164 	ld	c, e
      000054 42               [ 4]  165 	ld	b, d
      000055 F8 05            [12]  166 	ldhl	sp,	#5
      000057 77               [ 8]  167 	ld	(hl), a
                                    168 ;spritestructs.h:49: sprite->x = x;
      000058 21 06 00         [12]  169 	ld	hl, #0x0006
      00005B 09               [ 8]  170 	add	hl, bc
      00005C 5D               [ 4]  171 	ld	e, l
      00005D 54               [ 4]  172 	ld	d, h
      00005E F8 05            [12]  173 	ldhl	sp,	#5
      000060 7E               [ 8]  174 	ld	a, (hl)
      000061 12               [ 8]  175 	ld	(de), a
                                    176 ;spritestructs.h:50: sprite->y = y;
      000062 21 07 00         [12]  177 	ld	hl, #0x0007
      000065 09               [ 8]  178 	add	hl, bc
      000066 5D               [ 4]  179 	ld	e, l
      000067 54               [ 4]  180 	ld	d, h
      000068 F8 0A            [12]  181 	ldhl	sp,	#10
      00006A 7E               [ 8]  182 	ld	a, (hl)
      00006B 12               [ 8]  183 	ld	(de), a
                                    184 ;spritestructs.h:52: for (uint8_t iy = 0; iy!= sprite->spriteHeight; iy++)
      00006C 21 02 00         [12]  185 	ld	hl, #0x0002
      00006F 09               [ 8]  186 	add	hl, bc
      000070 33               [ 8]  187 	inc	sp
      000071 33               [ 8]  188 	inc	sp
      000072 E5               [16]  189 	push	hl
      000073 69               [ 4]  190 	ld	l, c
      000074 60               [ 4]  191 	ld	h, b
      000075 23               [ 8]  192 	inc	hl
      000076 E5               [16]  193 	push	hl
      000077 7D               [ 4]  194 	ld	a, l
      000078 F8 04            [12]  195 	ldhl	sp,	#4
      00007A 77               [ 8]  196 	ld	(hl), a
      00007B E1               [12]  197 	pop	hl
      00007C 7C               [ 4]  198 	ld	a, h
      00007D F8 03            [12]  199 	ldhl	sp,	#3
      00007F 77               [ 8]  200 	ld	(hl), a
      000080 F8 06            [12]  201 	ldhl	sp,	#6
      000082 36 00            [12]  202 	ld	(hl), #0x00
      000084                        203 00108$:
      000084 F8 02            [12]  204 	ldhl	sp,#2
      000086 2A               [ 8]  205 	ld	a, (hl+)
      000087 5F               [ 4]  206 	ld	e, a
      000088 56               [ 8]  207 	ld	d, (hl)
      000089 1A               [ 8]  208 	ld	a, (de)
      00008A F8 07            [12]  209 	ldhl	sp,	#7
      00008C 32               [ 8]  210 	ld	(hl-), a
      00008D 2A               [ 8]  211 	ld	a, (hl+)
      00008E 96               [ 8]  212 	sub	a, (hl)
      00008F 28 5B            [12]  213 	jr	Z, 00110$
                                    214 ;spritestructs.h:54: for (uint8_t ix = 0; ix != sprite->spriteWidth; ix++)
      000091 F8 07            [12]  215 	ldhl	sp,	#7
      000093 36 00            [12]  216 	ld	(hl), #0x00
      000095                        217 00105$:
      000095 D1               [12]  218 	pop	de
      000096 D5               [16]  219 	push	de
      000097 1A               [ 8]  220 	ld	a, (de)
      000098 F8 04            [12]  221 	ldhl	sp,	#4
      00009A 77               [ 8]  222 	ld	(hl), a
      00009B F8 07            [12]  223 	ldhl	sp,	#7
      00009D 7E               [ 8]  224 	ld	a, (hl)
      00009E F8 04            [12]  225 	ldhl	sp,	#4
      0000A0 96               [ 8]  226 	sub	a, (hl)
      0000A1 28 44            [12]  227 	jr	Z, 00109$
                                    228 ;spritestructs.h:56: uint8_t index = sprite->spriteID + ix + (iy * sprite->spriteWidth);
      0000A3 0A               [ 8]  229 	ld	a, (bc)
      0000A4 F8 07            [12]  230 	ldhl	sp,	#7
      0000A6 86               [ 8]  231 	add	a, (hl)
      0000A7 57               [ 4]  232 	ld	d, a
      0000A8 C5               [16]  233 	push	bc
      0000A9 D5               [16]  234 	push	de
      0000AA F8 08            [12]  235 	ldhl	sp,	#8
      0000AC 2A               [ 8]  236 	ld	a, (hl+)
      0000AD 23               [ 8]  237 	inc	hl
      0000AE 5F               [ 4]  238 	ld	e, a
      0000AF 7E               [ 8]  239 	ld	a, (hl)
      0000B0 CDr00r00         [24]  240 	call	__muluchar
      0000B3 79               [ 4]  241 	ld	a, c
      0000B4 D1               [12]  242 	pop	de
      0000B5 C1               [12]  243 	pop	bc
      0000B6 82               [ 4]  244 	add	a, d
      0000B7 5F               [ 4]  245 	ld	e, a
                                    246 ;spritestructs.h:58: move_sprite(index, x + (ix * 8), y + (iy * 8));
      0000B8 F8 06            [12]  247 	ldhl	sp,	#6
      0000BA 7E               [ 8]  248 	ld	a, (hl)
      0000BB 87               [ 4]  249 	add	a, a
      0000BC 87               [ 4]  250 	add	a, a
      0000BD 87               [ 4]  251 	add	a, a
      0000BE F8 0A            [12]  252 	ldhl	sp,	#10
      0000C0 56               [ 8]  253 	ld	d, (hl)
      0000C1 82               [ 4]  254 	add	a, d
      0000C2 57               [ 4]  255 	ld	d, a
      0000C3 F8 07            [12]  256 	ldhl	sp,	#7
      0000C5 3A               [ 8]  257 	ld	a, (hl-)
      0000C6 2B               [ 8]  258 	dec	hl
      0000C7 87               [ 4]  259 	add	a, a
      0000C8 87               [ 4]  260 	add	a, a
      0000C9 87               [ 4]  261 	add	a, a
      0000CA 6E               [ 8]  262 	ld	l, (hl)
                                    263 ;	spillPairReg hl
                                    264 ;	spillPairReg hl
      0000CB 85               [ 4]  265 	add	a, l
      0000CC F8 04            [12]  266 	ldhl	sp,	#4
      0000CE 77               [ 8]  267 	ld	(hl), a
                                    268 ;c:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0000CF 26 00            [ 8]  269 	ld	h, #0x00
                                    270 ;	spillPairReg hl
                                    271 ;	spillPairReg hl
      0000D1 6B               [ 4]  272 	ld	l, e
      0000D2 29               [ 8]  273 	add	hl, hl
      0000D3 29               [ 8]  274 	add	hl, hl
      0000D4 D5               [16]  275 	push	de
      0000D5 11r00r00         [12]  276 	ld	de, #_shadow_OAM
      0000D8 19               [ 8]  277 	add	hl, de
      0000D9 D1               [12]  278 	pop	de
                                    279 ;c:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      0000DA 7A               [ 4]  280 	ld	a, d
      0000DB 22               [ 8]  281 	ld	(hl+), a
      0000DC 5D               [ 4]  282 	ld	e, l
      0000DD 54               [ 4]  283 	ld	d, h
      0000DE F8 04            [12]  284 	ldhl	sp,	#4
      0000E0 7E               [ 8]  285 	ld	a, (hl)
      0000E1 12               [ 8]  286 	ld	(de), a
                                    287 ;spritestructs.h:54: for (uint8_t ix = 0; ix != sprite->spriteWidth; ix++)
      0000E2 F8 07            [12]  288 	ldhl	sp,	#7
      0000E4 34               [12]  289 	inc	(hl)
      0000E5 18 AE            [12]  290 	jr	00105$
      0000E7                        291 00109$:
                                    292 ;spritestructs.h:52: for (uint8_t iy = 0; iy!= sprite->spriteHeight; iy++)
      0000E7 F8 06            [12]  293 	ldhl	sp,	#6
      0000E9 34               [12]  294 	inc	(hl)
      0000EA 18 98            [12]  295 	jr	00108$
      0000EC                        296 00110$:
                                    297 ;spritestructs.h:61: }
      0000EC E8 08            [16]  298 	add	sp, #8
      0000EE E1               [12]  299 	pop	hl
      0000EF 33               [ 8]  300 	inc	sp
      0000F0 E9               [ 4]  301 	jp	(hl)
                                    302 ;spritestructs.h:63: void scrollSprite(Sprite *sprite, uint8_t x, uint8_t y)
                                    303 ;	---------------------------------
                                    304 ; Function scrollSprite
                                    305 ; ---------------------------------
      0000F1                        306 _scrollSprite::
      0000F1 E8 F6            [16]  307 	add	sp, #-10
      0000F3 F8 08            [12]  308 	ldhl	sp,	#8
      0000F5 77               [ 8]  309 	ld	(hl), a
                                    310 ;spritestructs.h:66: sprite->x = x;
      0000F6 21 06 00         [12]  311 	ld	hl, #0x0006
      0000F9 19               [ 8]  312 	add	hl, de
      0000FA 4D               [ 4]  313 	ld	c, l
      0000FB 44               [ 4]  314 	ld	b, h
      0000FC F8 08            [12]  315 	ldhl	sp,	#8
      0000FE 7E               [ 8]  316 	ld	a, (hl)
      0000FF 02               [ 8]  317 	ld	(bc), a
                                    318 ;spritestructs.h:67: sprite->y = y;
      000100 21 07 00         [12]  319 	ld	hl, #0x0007
      000103 19               [ 8]  320 	add	hl, de
      000104 4D               [ 4]  321 	ld	c, l
      000105 44               [ 4]  322 	ld	b, h
      000106 F8 0C            [12]  323 	ldhl	sp,	#12
      000108 7E               [ 8]  324 	ld	a, (hl)
      000109 02               [ 8]  325 	ld	(bc), a
                                    326 ;spritestructs.h:69: uint8_t spriteCount = sprite->spriteWidth + sprite->spriteHeight;
      00010A 4B               [ 4]  327 	ld	c, e
      00010B 42               [ 4]  328 	ld	b, d
      00010C 03               [ 8]  329 	inc	bc
      00010D 03               [ 8]  330 	inc	bc
      00010E 0A               [ 8]  331 	ld	a, (bc)
      00010F 6B               [ 4]  332 	ld	l, e
                                    333 ;	spillPairReg hl
                                    334 ;	spillPairReg hl
      000110 62               [ 4]  335 	ld	h, d
                                    336 ;	spillPairReg hl
                                    337 ;	spillPairReg hl
      000111 23               [ 8]  338 	inc	hl
      000112 4E               [ 8]  339 	ld	c, (hl)
      000113 81               [ 4]  340 	add	a, c
      000114 F8 00            [12]  341 	ldhl	sp,	#0
      000116 77               [ 8]  342 	ld	(hl), a
                                    343 ;spritestructs.h:72: scroll_sprite(sprite->tilesetStart, x, y);
      000117 F8 0C            [12]  344 	ldhl	sp,	#12
      000119 7E               [ 8]  345 	ld	a, (hl)
      00011A F8 09            [12]  346 	ldhl	sp,	#9
      00011C 77               [ 8]  347 	ld	(hl), a
      00011D 21 05 00         [12]  348 	ld	hl, #0x0005
      000120 19               [ 8]  349 	add	hl, de
      000121 E5               [16]  350 	push	hl
      000122 7D               [ 4]  351 	ld	a, l
      000123 F8 08            [12]  352 	ldhl	sp,	#8
      000125 77               [ 8]  353 	ld	(hl), a
      000126 E1               [12]  354 	pop	hl
      000127 7C               [ 4]  355 	ld	a, h
      000128 F8 07            [12]  356 	ldhl	sp,	#7
      00012A 77               [ 8]  357 	ld	(hl), a
                                    358 ;spritestructs.h:70: if (spriteCount <= 2)
      00012B 3E 02            [ 8]  359 	ld	a, #0x02
      00012D F8 00            [12]  360 	ldhl	sp,	#0
      00012F 96               [ 8]  361 	sub	a, (hl)
      000130 38 69            [12]  362 	jr	C, 00114$
                                    363 ;spritestructs.h:72: scroll_sprite(sprite->tilesetStart, x, y);
      000132 F8 06            [12]  364 	ldhl	sp,#6
      000134 2A               [ 8]  365 	ld	a, (hl+)
      000135 5F               [ 4]  366 	ld	e, a
      000136 56               [ 8]  367 	ld	d, (hl)
      000137 1A               [ 8]  368 	ld	a, (de)
      000138 77               [ 8]  369 	ld	(hl), a
                                    370 ;c:\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      000139 3A               [ 8]  371 	ld	a, (hl-)
      00013A 22               [ 8]  372 	ld	(hl+), a
      00013B 36 00            [12]  373 	ld	(hl), #0x00
      00013D 3E 02            [ 8]  374 	ld	a, #0x02
      00013F                        375 00134$:
      00013F F8 06            [12]  376 	ldhl	sp,	#6
      000141 CB 26            [16]  377 	sla	(hl)
      000143 23               [ 8]  378 	inc	hl
      000144 CB 16            [16]  379 	rl	(hl)
      000146 3D               [ 4]  380 	dec	a
      000147 20 F6            [12]  381 	jr	NZ, 00134$
      000149 11r00r00         [12]  382 	ld	de, #_shadow_OAM
      00014C 3A               [ 8]  383 	ld	a, (hl-)
      00014D 6E               [ 8]  384 	ld	l, (hl)
      00014E 67               [ 4]  385 	ld	h, a
      00014F 19               [ 8]  386 	add	hl, de
      000150 E5               [16]  387 	push	hl
      000151 7D               [ 4]  388 	ld	a, l
      000152 F8 04            [12]  389 	ldhl	sp,	#4
      000154 77               [ 8]  390 	ld	(hl), a
      000155 E1               [12]  391 	pop	hl
      000156 7C               [ 4]  392 	ld	a, h
      000157 F8 03            [12]  393 	ldhl	sp,	#3
      000159 32               [ 8]  394 	ld	(hl-), a
      00015A 7E               [ 8]  395 	ld	a, (hl)
      00015B F8 05            [12]  396 	ldhl	sp,	#5
      00015D 32               [ 8]  397 	ld	(hl-), a
      00015E 2B               [ 8]  398 	dec	hl
      00015F 7E               [ 8]  399 	ld	a, (hl)
      000160 F8 06            [12]  400 	ldhl	sp,	#6
                                    401 ;c:\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      000162 32               [ 8]  402 	ld	(hl-), a
      000163 2A               [ 8]  403 	ld	a, (hl+)
      000164 5F               [ 4]  404 	ld	e, a
      000165 2A               [ 8]  405 	ld	a, (hl+)
      000166 57               [ 4]  406 	ld	d, a
      000167 1A               [ 8]  407 	ld	a, (de)
      000168 77               [ 8]  408 	ld	(hl), a
      000169 2A               [ 8]  409 	ld	a, (hl+)
      00016A 23               [ 8]  410 	inc	hl
      00016B 86               [ 8]  411 	add	a, (hl)
      00016C 77               [ 8]  412 	ld	(hl), a
      00016D F8 05            [12]  413 	ldhl	sp,#5
      00016F 2A               [ 8]  414 	ld	a, (hl+)
      000170 5F               [ 4]  415 	ld	e, a
      000171 56               [ 8]  416 	ld	d, (hl)
      000172 F8 09            [12]  417 	ldhl	sp,	#9
      000174 7E               [ 8]  418 	ld	a, (hl)
      000175 12               [ 8]  419 	ld	(de), a
      000176 F8 05            [12]  420 	ldhl	sp,#5
      000178 2A               [ 8]  421 	ld	a, (hl+)
      000179 5F               [ 4]  422 	ld	e, a
      00017A 56               [ 8]  423 	ld	d, (hl)
      00017B 6B               [ 4]  424 	ld	l, e
      00017C 62               [ 4]  425 	ld	h, d
      00017D 23               [ 8]  426 	inc	hl
      00017E E5               [16]  427 	push	hl
      00017F 7D               [ 4]  428 	ld	a, l
      000180 F8 05            [12]  429 	ldhl	sp,	#5
      000182 77               [ 8]  430 	ld	(hl), a
      000183 E1               [12]  431 	pop	hl
      000184 7C               [ 4]  432 	ld	a, h
      000185 F8 04            [12]  433 	ldhl	sp,	#4
      000187 32               [ 8]  434 	ld	(hl-), a
      000188 2A               [ 8]  435 	ld	a, (hl+)
      000189 5F               [ 4]  436 	ld	e, a
      00018A 56               [ 8]  437 	ld	d, (hl)
      00018B 1A               [ 8]  438 	ld	a, (de)
      00018C F8 09            [12]  439 	ldhl	sp,	#9
      00018E 77               [ 8]  440 	ld	(hl), a
      00018F 3A               [ 8]  441 	ld	a, (hl-)
      000190 86               [ 8]  442 	add	a, (hl)
      000191 4F               [ 4]  443 	ld	c, a
      000192 F8 03            [12]  444 	ldhl	sp,	#3
      000194 2A               [ 8]  445 	ld	a,	(hl+)
      000195 66               [ 8]  446 	ld	h, (hl)
      000196 6F               [ 4]  447 	ld	l, a
      000197 71               [ 8]  448 	ld	(hl), c
                                    449 ;spritestructs.h:72: scroll_sprite(sprite->tilesetStart, x, y);
      000198 C3r25r02         [16]  450 	jp	00110$
                                    451 ;spritestructs.h:76: for (uint8_t i = 0; i != spriteCount; i++)
      00019B                        452 00114$:
      00019B F8 09            [12]  453 	ldhl	sp,	#9
      00019D 7E               [ 8]  454 	ld	a, (hl)
      00019E F8 01            [12]  455 	ldhl	sp,	#1
      0001A0 77               [ 8]  456 	ld	(hl), a
      0001A1 F8 06            [12]  457 	ldhl	sp,	#6
      0001A3 7E               [ 8]  458 	ld	a, (hl)
      0001A4 F8 02            [12]  459 	ldhl	sp,	#2
      0001A6 77               [ 8]  460 	ld	(hl), a
      0001A7 F8 07            [12]  461 	ldhl	sp,	#7
      0001A9 7E               [ 8]  462 	ld	a, (hl)
      0001AA F8 03            [12]  463 	ldhl	sp,	#3
      0001AC 77               [ 8]  464 	ld	(hl), a
      0001AD F8 09            [12]  465 	ldhl	sp,	#9
      0001AF 36 00            [12]  466 	ld	(hl), #0x00
      0001B1                        467 00108$:
      0001B1 F8 09            [12]  468 	ldhl	sp,	#9
      0001B3 7E               [ 8]  469 	ld	a, (hl)
      0001B4 F8 00            [12]  470 	ldhl	sp,	#0
      0001B6 96               [ 8]  471 	sub	a, (hl)
      0001B7 28 6C            [12]  472 	jr	Z, 00110$
                                    473 ;spritestructs.h:78: scroll_sprite(sprite->tilesetStart + i, x, y);
      0001B9 F8 02            [12]  474 	ldhl	sp,#2
      0001BB 2A               [ 8]  475 	ld	a, (hl+)
      0001BC 5F               [ 4]  476 	ld	e, a
      0001BD 56               [ 8]  477 	ld	d, (hl)
      0001BE 1A               [ 8]  478 	ld	a, (de)
      0001BF F8 09            [12]  479 	ldhl	sp,	#9
      0001C1 86               [ 8]  480 	add	a, (hl)
      0001C2 4F               [ 4]  481 	ld	c, a
                                    482 ;c:\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0001C3 F8 06            [12]  483 	ldhl	sp,	#6
      0001C5 79               [ 4]  484 	ld	a, c
      0001C6 22               [ 8]  485 	ld	(hl+), a
      0001C7 AF               [ 4]  486 	xor	a, a
      0001C8 32               [ 8]  487 	ld	(hl-), a
      0001C9 3A               [ 8]  488 	ld	a, (hl-)
      0001CA 2B               [ 8]  489 	dec	hl
      0001CB 22               [ 8]  490 	ld	(hl+), a
      0001CC 36 00            [12]  491 	ld	(hl), #0x00
      0001CE 3E 02            [ 8]  492 	ld	a, #0x02
      0001D0                        493 00136$:
      0001D0 F8 04            [12]  494 	ldhl	sp,	#4
      0001D2 CB 26            [16]  495 	sla	(hl)
      0001D4 23               [ 8]  496 	inc	hl
      0001D5 CB 16            [16]  497 	rl	(hl)
      0001D7 3D               [ 4]  498 	dec	a
      0001D8 20 F6            [12]  499 	jr	NZ, 00136$
      0001DA 2B               [ 8]  500 	dec	hl
      0001DB 2A               [ 8]  501 	ld	a, (hl+)
      0001DC 5F               [ 4]  502 	ld	e, a
      0001DD 56               [ 8]  503 	ld	d, (hl)
      0001DE 21r00r00         [12]  504 	ld	hl, #_shadow_OAM
      0001E1 19               [ 8]  505 	add	hl, de
      0001E2 E5               [16]  506 	push	hl
      0001E3 7D               [ 4]  507 	ld	a, l
      0001E4 F8 08            [12]  508 	ldhl	sp,	#8
      0001E6 77               [ 8]  509 	ld	(hl), a
      0001E7 E1               [12]  510 	pop	hl
      0001E8 7C               [ 4]  511 	ld	a, h
      0001E9 F8 07            [12]  512 	ldhl	sp,	#7
      0001EB 32               [ 8]  513 	ld	(hl-), a
      0001EC 3A               [ 8]  514 	ld	a, (hl-)
      0001ED 2B               [ 8]  515 	dec	hl
      0001EE 77               [ 8]  516 	ld	(hl), a
      0001EF F8 07            [12]  517 	ldhl	sp,	#7
      0001F1 3A               [ 8]  518 	ld	a, (hl-)
      0001F2 2B               [ 8]  519 	dec	hl
                                    520 ;c:\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0001F3 32               [ 8]  521 	ld	(hl-), a
      0001F4 2A               [ 8]  522 	ld	a, (hl+)
      0001F5 5F               [ 4]  523 	ld	e, a
      0001F6 56               [ 8]  524 	ld	d, (hl)
      0001F7 1A               [ 8]  525 	ld	a, (de)
      0001F8 F8 01            [12]  526 	ldhl	sp,	#1
      0001FA 86               [ 8]  527 	add	a, (hl)
      0001FB 4F               [ 4]  528 	ld	c, a
      0001FC F8 04            [12]  529 	ldhl	sp,	#4
      0001FE 2A               [ 8]  530 	ld	a,	(hl+)
      0001FF 66               [ 8]  531 	ld	h, (hl)
      000200 6F               [ 4]  532 	ld	l, a
      000201 71               [ 8]  533 	ld	(hl), c
      000202 F8 04            [12]  534 	ldhl	sp,#4
      000204 2A               [ 8]  535 	ld	a, (hl+)
      000205 5F               [ 4]  536 	ld	e, a
      000206 56               [ 8]  537 	ld	d, (hl)
      000207 6B               [ 4]  538 	ld	l, e
      000208 62               [ 4]  539 	ld	h, d
      000209 23               [ 8]  540 	inc	hl
      00020A E5               [16]  541 	push	hl
      00020B 7D               [ 4]  542 	ld	a, l
      00020C F8 08            [12]  543 	ldhl	sp,	#8
      00020E 77               [ 8]  544 	ld	(hl), a
      00020F E1               [12]  545 	pop	hl
      000210 7C               [ 4]  546 	ld	a, h
      000211 F8 07            [12]  547 	ldhl	sp,	#7
      000213 32               [ 8]  548 	ld	(hl-), a
      000214 2A               [ 8]  549 	ld	a, (hl+)
      000215 5F               [ 4]  550 	ld	e, a
      000216 2A               [ 8]  551 	ld	a, (hl+)
      000217 57               [ 4]  552 	ld	d, a
      000218 1A               [ 8]  553 	ld	a, (de)
      000219 86               [ 8]  554 	add	a, (hl)
      00021A 2B               [ 8]  555 	dec	hl
      00021B 4F               [ 4]  556 	ld	c, a
      00021C 3A               [ 8]  557 	ld	a, (hl-)
      00021D 6E               [ 8]  558 	ld	l, (hl)
      00021E 67               [ 4]  559 	ld	h, a
      00021F 71               [ 8]  560 	ld	(hl), c
                                    561 ;spritestructs.h:76: for (uint8_t i = 0; i != spriteCount; i++)
      000220 F8 09            [12]  562 	ldhl	sp,	#9
      000222 34               [12]  563 	inc	(hl)
      000223 18 8C            [12]  564 	jr	00108$
      000225                        565 00110$:
                                    566 ;spritestructs.h:84: }
      000225 E8 0A            [16]  567 	add	sp, #10
      000227 E1               [12]  568 	pop	hl
      000228 33               [ 8]  569 	inc	sp
      000229 E9               [ 4]  570 	jp	(hl)
                                    571 ;spritestructs.h:89: void setupSprites(Sprite *sprite, uint8_t spriteID, int8_t spriteHeight, uint8_t spriteWidth, uint8_t spriteFrames, uint8_t tilesetStart, uint8_t x, uint8_t y,
                                    572 ;	---------------------------------
                                    573 ; Function setupSprites
                                    574 ; ---------------------------------
      00022A                        575 _setupSprites::
      00022A 3B               [ 8]  576 	dec	sp
      00022B F8 00            [12]  577 	ldhl	sp,	#0
      00022D 77               [ 8]  578 	ld	(hl), a
                                    579 ;spritestructs.h:92: sprite->tileset = tileset;
      00022E 21 0A 00         [12]  580 	ld	hl, #0x000a
      000231 19               [ 8]  581 	add	hl, de
      000232 4D               [ 4]  582 	ld	c, l
      000233 44               [ 4]  583 	ld	b, h
      000234 F8 0B            [12]  584 	ldhl	sp,	#11
      000236 2A               [ 8]  585 	ld	a, (hl+)
      000237 02               [ 8]  586 	ld	(bc), a
      000238 03               [ 8]  587 	inc	bc
      000239 7E               [ 8]  588 	ld	a, (hl)
      00023A 02               [ 8]  589 	ld	(bc), a
                                    590 ;spritestructs.h:93: sprite->tilesetStart = tilesetStart;
      00023B 21 05 00         [12]  591 	ld	hl, #0x0005
      00023E 19               [ 8]  592 	add	hl, de
      00023F 4D               [ 4]  593 	ld	c, l
      000240 44               [ 4]  594 	ld	b, h
      000241 F8 06            [12]  595 	ldhl	sp,	#6
      000243 7E               [ 8]  596 	ld	a, (hl)
      000244 02               [ 8]  597 	ld	(bc), a
                                    598 ;spritestructs.h:94: sprite->spriteID = spriteID;
      000245 F8 00            [12]  599 	ldhl	sp,	#0
      000247 7E               [ 8]  600 	ld	a, (hl)
      000248 12               [ 8]  601 	ld	(de), a
                                    602 ;spritestructs.h:95: sprite->spriteHeight = spriteHeight;
      000249 4B               [ 4]  603 	ld	c, e
      00024A 42               [ 4]  604 	ld	b, d
      00024B 03               [ 8]  605 	inc	bc
      00024C F8 03            [12]  606 	ldhl	sp,	#3
                                    607 ;spritestructs.h:96: sprite->spriteWidth = spriteWidth;
      00024E 2A               [ 8]  608 	ld	a, (hl+)
      00024F 02               [ 8]  609 	ld	(bc), a
      000250 4B               [ 4]  610 	ld	c, e
      000251 42               [ 4]  611 	ld	b, d
      000252 03               [ 8]  612 	inc	bc
      000253 03               [ 8]  613 	inc	bc
                                    614 ;spritestructs.h:97: sprite->spriteFrames = spriteFrames;
      000254 2A               [ 8]  615 	ld	a, (hl+)
      000255 02               [ 8]  616 	ld	(bc), a
      000256 4B               [ 4]  617 	ld	c, e
      000257 42               [ 4]  618 	ld	b, d
      000258 03               [ 8]  619 	inc	bc
      000259 03               [ 8]  620 	inc	bc
      00025A 03               [ 8]  621 	inc	bc
      00025B 7E               [ 8]  622 	ld	a, (hl)
      00025C 02               [ 8]  623 	ld	(bc), a
                                    624 ;spritestructs.h:99: sprite->x = x;
      00025D 21 06 00         [12]  625 	ld	hl, #0x0006
      000260 19               [ 8]  626 	add	hl, de
      000261 4D               [ 4]  627 	ld	c, l
      000262 44               [ 4]  628 	ld	b, h
      000263 F8 07            [12]  629 	ldhl	sp,	#7
      000265 7E               [ 8]  630 	ld	a, (hl)
      000266 02               [ 8]  631 	ld	(bc), a
                                    632 ;spritestructs.h:100: sprite->y = y;
      000267 21 07 00         [12]  633 	ld	hl, #0x0007
      00026A 19               [ 8]  634 	add	hl, de
      00026B 4D               [ 4]  635 	ld	c, l
      00026C 44               [ 4]  636 	ld	b, h
      00026D F8 08            [12]  637 	ldhl	sp,	#8
      00026F 7E               [ 8]  638 	ld	a, (hl)
      000270 02               [ 8]  639 	ld	(bc), a
                                    640 ;spritestructs.h:101: sprite->velocityX = velocityX;
      000271 21 08 00         [12]  641 	ld	hl, #0x0008
      000274 19               [ 8]  642 	add	hl, de
      000275 4D               [ 4]  643 	ld	c, l
      000276 44               [ 4]  644 	ld	b, h
      000277 F8 09            [12]  645 	ldhl	sp,	#9
      000279 7E               [ 8]  646 	ld	a, (hl)
      00027A 02               [ 8]  647 	ld	(bc), a
                                    648 ;spritestructs.h:102: sprite->velocityY = velocityY;
      00027B 21 09 00         [12]  649 	ld	hl, #0x0009
      00027E 19               [ 8]  650 	add	hl, de
      00027F 4D               [ 4]  651 	ld	c, l
      000280 44               [ 4]  652 	ld	b, h
      000281 F8 0A            [12]  653 	ldhl	sp,	#10
      000283 7E               [ 8]  654 	ld	a, (hl)
      000284 02               [ 8]  655 	ld	(bc), a
                                    656 ;spritestructs.h:104: LoadSpriteFrame(sprite, 0);
      000285 AF               [ 4]  657 	xor	a, a
      000286 CDr00r00         [24]  658 	call	_LoadSpriteFrame
                                    659 ;spritestructs.h:111: }
      000289 33               [ 8]  660 	inc	sp
      00028A E1               [12]  661 	pop	hl
      00028B E8 0A            [16]  662 	add	sp, #10
      00028D E9               [ 4]  663 	jp	(hl)
                                    664 ;characterstruct.c:34: void LoadCharacterFrame(Character *character, uint8_t frame)
                                    665 ;	---------------------------------
                                    666 ; Function LoadCharacterFrame
                                    667 ; ---------------------------------
      00028E                        668 _LoadCharacterFrame::
      00028E E8 FC            [16]  669 	add	sp, #-4
      000290 4B               [ 4]  670 	ld	c, e
      000291 42               [ 4]  671 	ld	b, d
      000292 5F               [ 4]  672 	ld	e, a
                                    673 ;characterstruct.c:36: character->charactercurrentFrame = frame;
      000293 21 04 00         [12]  674 	ld	hl, #0x0004
      000296 09               [ 8]  675 	add	hl, bc
      000297 73               [ 8]  676 	ld	(hl), e
                                    677 ;characterstruct.c:38: uint8_t characterCount = character->characterWidth + character->characterHeight;
      000298 59               [ 4]  678 	ld	e, c
      000299 50               [ 4]  679 	ld	d, b
      00029A 13               [ 8]  680 	inc	de
      00029B 13               [ 8]  681 	inc	de
      00029C 1A               [ 8]  682 	ld	a, (de)
      00029D 69               [ 4]  683 	ld	l, c
                                    684 ;	spillPairReg hl
                                    685 ;	spillPairReg hl
      00029E 60               [ 4]  686 	ld	h, b
                                    687 ;	spillPairReg hl
                                    688 ;	spillPairReg hl
      00029F 23               [ 8]  689 	inc	hl
      0002A0 5E               [ 8]  690 	ld	e, (hl)
      0002A1 83               [ 4]  691 	add	a, e
      0002A2 F8 00            [12]  692 	ldhl	sp,	#0
      0002A4 77               [ 8]  693 	ld	(hl), a
                                    694 ;characterstruct.c:40: for (uint8_t i = 0; i != characterCount; i++)
      0002A5 21 05 00         [12]  695 	ld	hl, #0x0005
      0002A8 09               [ 8]  696 	add	hl, bc
      0002A9 E5               [16]  697 	push	hl
      0002AA 7D               [ 4]  698 	ld	a, l
      0002AB F8 03            [12]  699 	ldhl	sp,	#3
      0002AD 77               [ 8]  700 	ld	(hl), a
      0002AE E1               [12]  701 	pop	hl
      0002AF 7C               [ 4]  702 	ld	a, h
      0002B0 F8 02            [12]  703 	ldhl	sp,	#2
      0002B2 22               [ 8]  704 	ld	(hl+), a
      0002B3 36 00            [12]  705 	ld	(hl), #0x00
      0002B5                        706 00104$:
      0002B5 F8 00            [12]  707 	ldhl	sp,	#0
      0002B7 7E               [ 8]  708 	ld	a, (hl)
      0002B8 F8 03            [12]  709 	ldhl	sp,	#3
      0002BA 96               [ 8]  710 	sub	a, (hl)
      0002BB 28 1F            [12]  711 	jr	Z, 00106$
                                    712 ;characterstruct.c:42: set_sprite_tile(character->characterID + i, character->charactertilesetStart + i);
      0002BD F8 01            [12]  713 	ldhl	sp,#1
      0002BF 2A               [ 8]  714 	ld	a, (hl+)
      0002C0 5F               [ 4]  715 	ld	e, a
      0002C1 2A               [ 8]  716 	ld	a, (hl+)
      0002C2 57               [ 4]  717 	ld	d, a
      0002C3 1A               [ 8]  718 	ld	a, (de)
      0002C4 86               [ 8]  719 	add	a, (hl)
      0002C5 5F               [ 4]  720 	ld	e, a
      0002C6 0A               [ 8]  721 	ld	a, (bc)
      0002C7 86               [ 8]  722 	add	a, (hl)
      0002C8 57               [ 4]  723 	ld	d, a
                                    724 ;c:\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0002C9 26 00            [ 8]  725 	ld	h, #0x00
                                    726 ;	spillPairReg hl
                                    727 ;	spillPairReg hl
      0002CB 6A               [ 4]  728 	ld	l, d
      0002CC 29               [ 8]  729 	add	hl, hl
      0002CD 29               [ 8]  730 	add	hl, hl
      0002CE D5               [16]  731 	push	de
      0002CF 11r00r00         [12]  732 	ld	de, #_shadow_OAM
      0002D2 19               [ 8]  733 	add	hl, de
      0002D3 23               [ 8]  734 	inc	hl
      0002D4 23               [ 8]  735 	inc	hl
      0002D5 D1               [12]  736 	pop	de
      0002D6 73               [ 8]  737 	ld	(hl), e
                                    738 ;characterstruct.c:40: for (uint8_t i = 0; i != characterCount; i++)
      0002D7 F8 03            [12]  739 	ldhl	sp,	#3
      0002D9 34               [12]  740 	inc	(hl)
      0002DA 18 D9            [12]  741 	jr	00104$
      0002DC                        742 00106$:
                                    743 ;characterstruct.c:44: }
      0002DC E8 04            [16]  744 	add	sp, #4
      0002DE C9               [16]  745 	ret
                                    746 ;characterstruct.c:46: void moveCharacter (Character *character, uint8_t x, uint8_t y)
                                    747 ;	---------------------------------
                                    748 ; Function moveCharacter
                                    749 ; ---------------------------------
      0002DF                        750 _moveCharacter::
      0002DF E8 F8            [16]  751 	add	sp, #-8
      0002E1 4B               [ 4]  752 	ld	c, e
      0002E2 42               [ 4]  753 	ld	b, d
      0002E3 F8 05            [12]  754 	ldhl	sp,	#5
      0002E5 77               [ 8]  755 	ld	(hl), a
                                    756 ;characterstruct.c:48: character->characterX = x;
      0002E6 21 06 00         [12]  757 	ld	hl, #0x0006
      0002E9 09               [ 8]  758 	add	hl, bc
      0002EA 5D               [ 4]  759 	ld	e, l
      0002EB 54               [ 4]  760 	ld	d, h
      0002EC F8 05            [12]  761 	ldhl	sp,	#5
      0002EE 7E               [ 8]  762 	ld	a, (hl)
      0002EF 12               [ 8]  763 	ld	(de), a
                                    764 ;characterstruct.c:49: character->characterY = y;
      0002F0 21 07 00         [12]  765 	ld	hl, #0x0007
      0002F3 09               [ 8]  766 	add	hl, bc
      0002F4 5D               [ 4]  767 	ld	e, l
      0002F5 54               [ 4]  768 	ld	d, h
      0002F6 F8 0A            [12]  769 	ldhl	sp,	#10
      0002F8 7E               [ 8]  770 	ld	a, (hl)
      0002F9 12               [ 8]  771 	ld	(de), a
                                    772 ;characterstruct.c:51: for (uint8_t iy = 0; iy!= character->characterHeight; iy++)
      0002FA 21 02 00         [12]  773 	ld	hl, #0x0002
      0002FD 09               [ 8]  774 	add	hl, bc
      0002FE 33               [ 8]  775 	inc	sp
      0002FF 33               [ 8]  776 	inc	sp
      000300 E5               [16]  777 	push	hl
      000301 69               [ 4]  778 	ld	l, c
      000302 60               [ 4]  779 	ld	h, b
      000303 23               [ 8]  780 	inc	hl
      000304 E5               [16]  781 	push	hl
      000305 7D               [ 4]  782 	ld	a, l
      000306 F8 04            [12]  783 	ldhl	sp,	#4
      000308 77               [ 8]  784 	ld	(hl), a
      000309 E1               [12]  785 	pop	hl
      00030A 7C               [ 4]  786 	ld	a, h
      00030B F8 03            [12]  787 	ldhl	sp,	#3
      00030D 77               [ 8]  788 	ld	(hl), a
      00030E F8 06            [12]  789 	ldhl	sp,	#6
      000310 36 00            [12]  790 	ld	(hl), #0x00
      000312                        791 00108$:
      000312 F8 02            [12]  792 	ldhl	sp,#2
      000314 2A               [ 8]  793 	ld	a, (hl+)
      000315 5F               [ 4]  794 	ld	e, a
      000316 56               [ 8]  795 	ld	d, (hl)
      000317 1A               [ 8]  796 	ld	a, (de)
      000318 F8 07            [12]  797 	ldhl	sp,	#7
      00031A 32               [ 8]  798 	ld	(hl-), a
      00031B 2A               [ 8]  799 	ld	a, (hl+)
      00031C 96               [ 8]  800 	sub	a, (hl)
      00031D 28 5B            [12]  801 	jr	Z, 00110$
                                    802 ;characterstruct.c:53: for (uint8_t ix = 0; ix != character->characterWidth; ix++)
      00031F F8 07            [12]  803 	ldhl	sp,	#7
      000321 36 00            [12]  804 	ld	(hl), #0x00
      000323                        805 00105$:
      000323 D1               [12]  806 	pop	de
      000324 D5               [16]  807 	push	de
      000325 1A               [ 8]  808 	ld	a, (de)
      000326 F8 04            [12]  809 	ldhl	sp,	#4
      000328 77               [ 8]  810 	ld	(hl), a
      000329 F8 07            [12]  811 	ldhl	sp,	#7
      00032B 7E               [ 8]  812 	ld	a, (hl)
      00032C F8 04            [12]  813 	ldhl	sp,	#4
      00032E 96               [ 8]  814 	sub	a, (hl)
      00032F 28 44            [12]  815 	jr	Z, 00109$
                                    816 ;characterstruct.c:55: uint8_t index = character->characterID + ix + (iy * character->characterWidth);
      000331 0A               [ 8]  817 	ld	a, (bc)
      000332 F8 07            [12]  818 	ldhl	sp,	#7
      000334 86               [ 8]  819 	add	a, (hl)
      000335 57               [ 4]  820 	ld	d, a
      000336 C5               [16]  821 	push	bc
      000337 D5               [16]  822 	push	de
      000338 F8 08            [12]  823 	ldhl	sp,	#8
      00033A 2A               [ 8]  824 	ld	a, (hl+)
      00033B 23               [ 8]  825 	inc	hl
      00033C 5F               [ 4]  826 	ld	e, a
      00033D 7E               [ 8]  827 	ld	a, (hl)
      00033E CDr00r00         [24]  828 	call	__muluchar
      000341 79               [ 4]  829 	ld	a, c
      000342 D1               [12]  830 	pop	de
      000343 C1               [12]  831 	pop	bc
      000344 82               [ 4]  832 	add	a, d
      000345 5F               [ 4]  833 	ld	e, a
                                    834 ;characterstruct.c:57: move_sprite(index, x + (ix * 8), y + (iy * 8));
      000346 F8 06            [12]  835 	ldhl	sp,	#6
      000348 7E               [ 8]  836 	ld	a, (hl)
      000349 87               [ 4]  837 	add	a, a
      00034A 87               [ 4]  838 	add	a, a
      00034B 87               [ 4]  839 	add	a, a
      00034C F8 0A            [12]  840 	ldhl	sp,	#10
      00034E 56               [ 8]  841 	ld	d, (hl)
      00034F 82               [ 4]  842 	add	a, d
      000350 57               [ 4]  843 	ld	d, a
      000351 F8 07            [12]  844 	ldhl	sp,	#7
      000353 3A               [ 8]  845 	ld	a, (hl-)
      000354 2B               [ 8]  846 	dec	hl
      000355 87               [ 4]  847 	add	a, a
      000356 87               [ 4]  848 	add	a, a
      000357 87               [ 4]  849 	add	a, a
      000358 6E               [ 8]  850 	ld	l, (hl)
                                    851 ;	spillPairReg hl
                                    852 ;	spillPairReg hl
      000359 85               [ 4]  853 	add	a, l
      00035A F8 04            [12]  854 	ldhl	sp,	#4
      00035C 77               [ 8]  855 	ld	(hl), a
                                    856 ;c:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00035D 26 00            [ 8]  857 	ld	h, #0x00
                                    858 ;	spillPairReg hl
                                    859 ;	spillPairReg hl
      00035F 6B               [ 4]  860 	ld	l, e
      000360 29               [ 8]  861 	add	hl, hl
      000361 29               [ 8]  862 	add	hl, hl
      000362 D5               [16]  863 	push	de
      000363 11r00r00         [12]  864 	ld	de, #_shadow_OAM
      000366 19               [ 8]  865 	add	hl, de
      000367 D1               [12]  866 	pop	de
                                    867 ;c:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000368 7A               [ 4]  868 	ld	a, d
      000369 22               [ 8]  869 	ld	(hl+), a
      00036A 5D               [ 4]  870 	ld	e, l
      00036B 54               [ 4]  871 	ld	d, h
      00036C F8 04            [12]  872 	ldhl	sp,	#4
      00036E 7E               [ 8]  873 	ld	a, (hl)
      00036F 12               [ 8]  874 	ld	(de), a
                                    875 ;characterstruct.c:53: for (uint8_t ix = 0; ix != character->characterWidth; ix++)
      000370 F8 07            [12]  876 	ldhl	sp,	#7
      000372 34               [12]  877 	inc	(hl)
      000373 18 AE            [12]  878 	jr	00105$
      000375                        879 00109$:
                                    880 ;characterstruct.c:51: for (uint8_t iy = 0; iy!= character->characterHeight; iy++)
      000375 F8 06            [12]  881 	ldhl	sp,	#6
      000377 34               [12]  882 	inc	(hl)
      000378 18 98            [12]  883 	jr	00108$
      00037A                        884 00110$:
                                    885 ;characterstruct.c:60: }
      00037A E8 08            [16]  886 	add	sp, #8
      00037C E1               [12]  887 	pop	hl
      00037D 33               [ 8]  888 	inc	sp
      00037E E9               [ 4]  889 	jp	(hl)
                                    890 ;characterstruct.c:63: void playerMovement(Character *character)
                                    891 ;	---------------------------------
                                    892 ; Function playerMovement
                                    893 ; ---------------------------------
      00037F                        894 _playerMovement::
      00037F E8 FD            [16]  895 	add	sp, #-3
                                    896 ;characterstruct.c:67: int8_t moveX = 0;
      000381 0E 00            [ 8]  897 	ld	c, #0x00
                                    898 ;characterstruct.c:68: uint8_t buttons = joypad();
      000383 D5               [16]  899 	push	de
      000384 CDr00r00         [24]  900 	call	_joypad
      000387 47               [ 4]  901 	ld	b, a
      000388 D1               [12]  902 	pop	de
                                    903 ;characterstruct.c:73: uint8_t characterCount = character->characterWidth + character->characterHeight;
      000389 6B               [ 4]  904 	ld	l, e
                                    905 ;	spillPairReg hl
                                    906 ;	spillPairReg hl
      00038A 62               [ 4]  907 	ld	h, d
                                    908 ;	spillPairReg hl
                                    909 ;	spillPairReg hl
      00038B 23               [ 8]  910 	inc	hl
      00038C 23               [ 8]  911 	inc	hl
      00038D 7E               [ 8]  912 	ld	a, (hl)
      00038E 6B               [ 4]  913 	ld	l, e
                                    914 ;	spillPairReg hl
                                    915 ;	spillPairReg hl
      00038F 62               [ 4]  916 	ld	h, d
                                    917 ;	spillPairReg hl
                                    918 ;	spillPairReg hl
      000390 23               [ 8]  919 	inc	hl
      000391 6E               [ 8]  920 	ld	l, (hl)
                                    921 ;	spillPairReg hl
      000392 85               [ 4]  922 	add	a, l
      000393 F8 00            [12]  923 	ldhl	sp,	#0
      000395 77               [ 8]  924 	ld	(hl), a
                                    925 ;characterstruct.c:76: if (buttons & J_LEFT){
      000396 CB 48            [ 8]  926 	bit	1, b
      000398 28 02            [12]  927 	jr	Z, 00102$
                                    928 ;characterstruct.c:77: moveX = -1;
      00039A 0E FF            [ 8]  929 	ld	c, #0xff
      00039C                        930 00102$:
                                    931 ;characterstruct.c:79: if (buttons & J_RIGHT){
      00039C CB 40            [ 8]  932 	bit	0, b
      00039E 28 02            [12]  933 	jr	Z, 00115$
                                    934 ;characterstruct.c:80: moveX = 1;
      0003A0 0E 01            [ 8]  935 	ld	c, #0x01
                                    936 ;characterstruct.c:83: for (uint8_t i = 0; i != characterCount; i++)
      0003A2                        937 00115$:
      0003A2 21 05 00         [12]  938 	ld	hl, #0x0005
      0003A5 19               [ 8]  939 	add	hl, de
      0003A6 E5               [16]  940 	push	hl
      0003A7 7D               [ 4]  941 	ld	a, l
      0003A8 F8 03            [12]  942 	ldhl	sp,	#3
      0003AA 77               [ 8]  943 	ld	(hl), a
      0003AB E1               [12]  944 	pop	hl
      0003AC 7C               [ 4]  945 	ld	a, h
      0003AD F8 02            [12]  946 	ldhl	sp,	#2
      0003AF 77               [ 8]  947 	ld	(hl), a
      0003B0 06 00            [ 8]  948 	ld	b, #0x00
      0003B2                        949 00108$:
      0003B2 F8 00            [12]  950 	ldhl	sp,	#0
      0003B4 7E               [ 8]  951 	ld	a, (hl)
      0003B5 90               [ 4]  952 	sub	a, b
      0003B6 28 18            [12]  953 	jr	Z, 00110$
                                    954 ;characterstruct.c:85: scroll_sprite(character->charactertilesetStart + i, moveX, 0);
      0003B8 F8 01            [12]  955 	ldhl	sp,#1
      0003BA 2A               [ 8]  956 	ld	a, (hl+)
      0003BB 5F               [ 4]  957 	ld	e, a
      0003BC 56               [ 8]  958 	ld	d, (hl)
      0003BD 1A               [ 8]  959 	ld	a, (de)
      0003BE 80               [ 4]  960 	add	a, b
                                    961 ;c:\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0003BF 6F               [ 4]  962 	ld	l, a
                                    963 ;	spillPairReg hl
                                    964 ;	spillPairReg hl
      0003C0 26 00            [ 8]  965 	ld	h, #0x00
                                    966 ;	spillPairReg hl
                                    967 ;	spillPairReg hl
      0003C2 29               [ 8]  968 	add	hl, hl
      0003C3 29               [ 8]  969 	add	hl, hl
      0003C4 11r00r00         [12]  970 	ld	de, #_shadow_OAM
      0003C7 19               [ 8]  971 	add	hl, de
                                    972 ;c:\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0003C8 7E               [ 8]  973 	ld	a, (hl)
      0003C9 22               [ 8]  974 	ld	(hl+), a
      0003CA 7E               [ 8]  975 	ld	a, (hl)
      0003CB 81               [ 4]  976 	add	a, c
      0003CC 77               [ 8]  977 	ld	(hl), a
                                    978 ;characterstruct.c:83: for (uint8_t i = 0; i != characterCount; i++)
      0003CD 04               [ 4]  979 	inc	b
      0003CE 18 E2            [12]  980 	jr	00108$
      0003D0                        981 00110$:
                                    982 ;characterstruct.c:87: }
      0003D0 E8 03            [16]  983 	add	sp, #3
      0003D2 C9               [16]  984 	ret
                                    985 ;characterstruct.c:94: void setupCharacter(Character *character, uint8_t characterID, int8_t characterHeight, uint8_t characterWidth, uint8_t characterFrames, uint8_t charactertilesetStart, uint8_t characterX, uint8_t characterY,
                                    986 ;	---------------------------------
                                    987 ; Function setupCharacter
                                    988 ; ---------------------------------
      0003D3                        989 _setupCharacter::
      0003D3 3B               [ 8]  990 	dec	sp
      0003D4 F8 00            [12]  991 	ldhl	sp,	#0
      0003D6 77               [ 8]  992 	ld	(hl), a
                                    993 ;characterstruct.c:97: character->charactertileset = charactertileset;
      0003D7 21 0A 00         [12]  994 	ld	hl, #0x000a
      0003DA 19               [ 8]  995 	add	hl, de
      0003DB 4D               [ 4]  996 	ld	c, l
      0003DC 44               [ 4]  997 	ld	b, h
      0003DD F8 0B            [12]  998 	ldhl	sp,	#11
      0003DF 2A               [ 8]  999 	ld	a, (hl+)
      0003E0 02               [ 8] 1000 	ld	(bc), a
      0003E1 03               [ 8] 1001 	inc	bc
      0003E2 7E               [ 8] 1002 	ld	a, (hl)
      0003E3 02               [ 8] 1003 	ld	(bc), a
                                   1004 ;characterstruct.c:98: character->charactertilesetStart = charactertilesetStart;
      0003E4 21 05 00         [12] 1005 	ld	hl, #0x0005
      0003E7 19               [ 8] 1006 	add	hl, de
      0003E8 4D               [ 4] 1007 	ld	c, l
      0003E9 44               [ 4] 1008 	ld	b, h
      0003EA F8 06            [12] 1009 	ldhl	sp,	#6
      0003EC 7E               [ 8] 1010 	ld	a, (hl)
      0003ED 02               [ 8] 1011 	ld	(bc), a
                                   1012 ;characterstruct.c:99: character->characterID = characterID;
      0003EE F8 00            [12] 1013 	ldhl	sp,	#0
      0003F0 7E               [ 8] 1014 	ld	a, (hl)
      0003F1 12               [ 8] 1015 	ld	(de), a
                                   1016 ;characterstruct.c:100: character->characterHeight = characterHeight;
      0003F2 4B               [ 4] 1017 	ld	c, e
      0003F3 42               [ 4] 1018 	ld	b, d
      0003F4 03               [ 8] 1019 	inc	bc
      0003F5 F8 03            [12] 1020 	ldhl	sp,	#3
                                   1021 ;characterstruct.c:101: character->characterWidth = characterWidth;
      0003F7 2A               [ 8] 1022 	ld	a, (hl+)
      0003F8 02               [ 8] 1023 	ld	(bc), a
      0003F9 4B               [ 4] 1024 	ld	c, e
      0003FA 42               [ 4] 1025 	ld	b, d
      0003FB 03               [ 8] 1026 	inc	bc
      0003FC 03               [ 8] 1027 	inc	bc
                                   1028 ;characterstruct.c:102: character->characterFrames = characterFrames;
      0003FD 2A               [ 8] 1029 	ld	a, (hl+)
      0003FE 02               [ 8] 1030 	ld	(bc), a
      0003FF 4B               [ 4] 1031 	ld	c, e
      000400 42               [ 4] 1032 	ld	b, d
      000401 03               [ 8] 1033 	inc	bc
      000402 03               [ 8] 1034 	inc	bc
      000403 03               [ 8] 1035 	inc	bc
      000404 7E               [ 8] 1036 	ld	a, (hl)
      000405 02               [ 8] 1037 	ld	(bc), a
                                   1038 ;characterstruct.c:104: character->characterX = characterX;
      000406 21 06 00         [12] 1039 	ld	hl, #0x0006
      000409 19               [ 8] 1040 	add	hl, de
      00040A 4D               [ 4] 1041 	ld	c, l
      00040B 44               [ 4] 1042 	ld	b, h
      00040C F8 07            [12] 1043 	ldhl	sp,	#7
                                   1044 ;characterstruct.c:105: character->characterX = characterY;
      00040E 2A               [ 8] 1045 	ld	a, (hl+)
      00040F 02               [ 8] 1046 	ld	(bc), a
      000410 7E               [ 8] 1047 	ld	a, (hl)
      000411 02               [ 8] 1048 	ld	(bc), a
                                   1049 ;characterstruct.c:106: character->charactervelocityX = charactervelocityX;
      000412 21 08 00         [12] 1050 	ld	hl, #0x0008
      000415 19               [ 8] 1051 	add	hl, de
      000416 4D               [ 4] 1052 	ld	c, l
      000417 44               [ 4] 1053 	ld	b, h
      000418 F8 09            [12] 1054 	ldhl	sp,	#9
      00041A 7E               [ 8] 1055 	ld	a, (hl)
      00041B 02               [ 8] 1056 	ld	(bc), a
                                   1057 ;characterstruct.c:107: character->charactervelocityY = charactervelocityY;
      00041C 21 09 00         [12] 1058 	ld	hl, #0x0009
      00041F 19               [ 8] 1059 	add	hl, de
      000420 4D               [ 4] 1060 	ld	c, l
      000421 44               [ 4] 1061 	ld	b, h
      000422 F8 0A            [12] 1062 	ldhl	sp,	#10
      000424 7E               [ 8] 1063 	ld	a, (hl)
      000425 02               [ 8] 1064 	ld	(bc), a
                                   1065 ;characterstruct.c:109: LoadCharacterFrame(character, 0);
      000426 AF               [ 4] 1066 	xor	a, a
      000427 CDr8Er02         [24] 1067 	call	_LoadCharacterFrame
                                   1068 ;characterstruct.c:116: }
      00042A 33               [ 8] 1069 	inc	sp
      00042B E1               [12] 1070 	pop	hl
      00042C E8 0A            [16] 1071 	add	sp, #10
      00042E E9               [ 4] 1072 	jp	(hl)
                                   1073 ;main.c:20: void setBackground(void){
                                   1074 ;	---------------------------------
                                   1075 ; Function setBackground
                                   1076 ; ---------------------------------
      00042F                       1077 _setBackground::
                                   1078 ;main.c:22: set_bkg_data(0, 18, BackgroundTiles);
      00042F 11r68r01         [12] 1079 	ld	de, #_BackgroundTiles
      000432 D5               [16] 1080 	push	de
      000433 21 00 12         [12] 1081 	ld	hl, #0x1200
      000436 E5               [16] 1082 	push	hl
      000437 CDr00r00         [24] 1083 	call	_set_bkg_data
      00043A E8 04            [16] 1084 	add	sp, #4
                                   1085 ;main.c:23: set_bkg_tiles(0, 0, 20, 18, backgroundmap);
      00043C 11r00r00         [12] 1086 	ld	de, #_backgroundmap
      00043F D5               [16] 1087 	push	de
      000440 21 14 12         [12] 1088 	ld	hl, #0x1214
      000443 E5               [16] 1089 	push	hl
      000444 AF               [ 4] 1090 	xor	a, a
      000445 0F               [ 4] 1091 	rrca
      000446 F5               [16] 1092 	push	af
      000447 CDr00r00         [24] 1093 	call	_set_bkg_tiles
      00044A E8 06            [16] 1094 	add	sp, #6
                                   1095 ;main.c:26: }
      00044C C9               [16] 1096 	ret
                                   1097 ;main.c:28: void loadSprites(void)
                                   1098 ;	---------------------------------
                                   1099 ; Function loadSprites
                                   1100 ; ---------------------------------
      00044D                       1101 _loadSprites::
                                   1102 ;main.c:30: set_sprite_data(0, 1, Wine);
      00044D 11rD8r02         [12] 1103 	ld	de, #_Wine
      000450 D5               [16] 1104 	push	de
      000451 AF               [ 4] 1105 	xor	a, a
      000452 3C               [ 4] 1106 	inc	a
      000453 F5               [16] 1107 	push	af
      000454 CDr00r00         [24] 1108 	call	_set_sprite_data
      000457 E8 04            [16] 1109 	add	sp, #4
                                   1110 ;main.c:31: set_sprite_data(1, 4, Bartender);
      000459 11r98r02         [12] 1111 	ld	de, #_Bartender
      00045C D5               [16] 1112 	push	de
      00045D 21 01 04         [12] 1113 	ld	hl, #0x401
      000460 E5               [16] 1114 	push	hl
      000461 CDr00r00         [24] 1115 	call	_set_sprite_data
      000464 E8 04            [16] 1116 	add	sp, #4
                                   1117 ;main.c:34: }
      000466 C9               [16] 1118 	ret
                                   1119 ;main.c:39: void main(void)
                                   1120 ;	---------------------------------
                                   1121 ; Function main
                                   1122 ; ---------------------------------
      000467                       1123 _main::
                                   1124 ;main.c:44: SHOW_BKG;
      000467 F0r00            [12] 1125 	ldh	a, (_LCDC_REG + 0)
      000469 F6 01            [ 8] 1126 	or	a, #0x01
      00046B E0r00            [12] 1127 	ldh	(_LCDC_REG + 0), a
                                   1128 ;main.c:45: SHOW_SPRITES;
      00046D F0r00            [12] 1129 	ldh	a, (_LCDC_REG + 0)
      00046F F6 02            [ 8] 1130 	or	a, #0x02
      000471 E0r00            [12] 1131 	ldh	(_LCDC_REG + 0), a
                                   1132 ;main.c:47: setBackground();
      000473 CDr2Fr04         [24] 1133 	call	_setBackground
                                   1134 ;main.c:48: loadSprites();
      000476 CDr4Dr04         [24] 1135 	call	_loadSprites
                                   1136 ;main.c:50: setupCharacter(&bartender, 1, 2, 2, 4, 1, 30, 30, 0, 0, Bartender);
      000479 11r98r02         [12] 1137 	ld	de, #_Bartender
      00047C D5               [16] 1138 	push	de
      00047D AF               [ 4] 1139 	xor	a, a
      00047E 0F               [ 4] 1140 	rrca
      00047F F5               [16] 1141 	push	af
      000480 21 1E 1E         [12] 1142 	ld	hl, #0x1e1e
      000483 E5               [16] 1143 	push	hl
      000484 21 04 01         [12] 1144 	ld	hl, #0x104
      000487 E5               [16] 1145 	push	hl
      000488 21 02 02         [12] 1146 	ld	hl, #0x202
      00048B E5               [16] 1147 	push	hl
      00048C 3E 01            [ 8] 1148 	ld	a, #0x01
      00048E 11r0Cr00         [12] 1149 	ld	de, #_bartender
      000491 CDrD3r03         [24] 1150 	call	_setupCharacter
                                   1151 ;main.c:51: setupSprites(&wineglass, 0, 1, 1, 1, 0, 30, 30, 0, 0, Wine);
      000494 11rD8r02         [12] 1152 	ld	de, #_Wine
      000497 D5               [16] 1153 	push	de
      000498 AF               [ 4] 1154 	xor	a, a
      000499 0F               [ 4] 1155 	rrca
      00049A F5               [16] 1156 	push	af
      00049B 21 1E 1E         [12] 1157 	ld	hl, #0x1e1e
      00049E E5               [16] 1158 	push	hl
      00049F 21 01 00         [12] 1159 	ld	hl, #0x01
      0004A2 E5               [16] 1160 	push	hl
      0004A3 21 01 01         [12] 1161 	ld	hl, #0x101
      0004A6 E5               [16] 1162 	push	hl
      0004A7 AF               [ 4] 1163 	xor	a, a
      0004A8 11r00r00         [12] 1164 	ld	de, #_wineglass
      0004AB CDr2Ar02         [24] 1165 	call	_setupSprites
                                   1166 ;main.c:54: moveSprite(&wineglass, 20, 30);
      0004AE 3E 1E            [ 8] 1167 	ld	a, #0x1e
      0004B0 F5               [16] 1168 	push	af
      0004B1 33               [ 8] 1169 	inc	sp
      0004B2 3E 14            [ 8] 1170 	ld	a, #0x14
      0004B4 11r00r00         [12] 1171 	ld	de, #_wineglass
      0004B7 CDr51r00         [24] 1172 	call	_moveSprite
                                   1173 ;main.c:55: moveCharacter(&bartender, 80, 140);
      0004BA 3E 8C            [ 8] 1174 	ld	a, #0x8c
      0004BC F5               [16] 1175 	push	af
      0004BD 33               [ 8] 1176 	inc	sp
      0004BE 3E 50            [ 8] 1177 	ld	a, #0x50
      0004C0 11r0Cr00         [12] 1178 	ld	de, #_bartender
      0004C3 CDrDFr02         [24] 1179 	call	_moveCharacter
                                   1180 ;main.c:58: while (1) {
      0004C6                       1181 00102$:
                                   1182 ;main.c:60: playerMovement(&bartender);
      0004C6 11r0Cr00         [12] 1183 	ld	de, #_bartender
      0004C9 CDr7Fr03         [24] 1184 	call	_playerMovement
                                   1185 ;main.c:62: scrollSprite(&wineglass, 0, 1);
      0004CC 3E 01            [ 8] 1186 	ld	a, #0x01
      0004CE F5               [16] 1187 	push	af
      0004CF 33               [ 8] 1188 	inc	sp
      0004D0 AF               [ 4] 1189 	xor	a, a
      0004D1 11r00r00         [12] 1190 	ld	de, #_wineglass
      0004D4 CDrF1r00         [24] 1191 	call	_scrollSprite
                                   1192 ;main.c:63: wait_vbl_done();
      0004D7 CDr00r00         [24] 1193 	call	_wait_vbl_done
                                   1194 ;main.c:68: }
      0004DA 18 EA            [12] 1195 	jr	00102$
                                   1196 	.area _CODE
                                   1197 	.area _INITIALIZER
      000000                       1198 __xinit__backgroundmap:
      000000 07                    1199 	.db #0x07	; 7
      000001 07                    1200 	.db #0x07	; 7
      000002 07                    1201 	.db #0x07	; 7
      000003 07                    1202 	.db #0x07	; 7
      000004 07                    1203 	.db #0x07	; 7
      000005 07                    1204 	.db #0x07	; 7
      000006 07                    1205 	.db #0x07	; 7
      000007 07                    1206 	.db #0x07	; 7
      000008 07                    1207 	.db #0x07	; 7
      000009 07                    1208 	.db #0x07	; 7
      00000A 07                    1209 	.db #0x07	; 7
      00000B 07                    1210 	.db #0x07	; 7
      00000C 07                    1211 	.db #0x07	; 7
      00000D 07                    1212 	.db #0x07	; 7
      00000E 07                    1213 	.db #0x07	; 7
      00000F 07                    1214 	.db #0x07	; 7
      000010 07                    1215 	.db #0x07	; 7
      000011 07                    1216 	.db #0x07	; 7
      000012 07                    1217 	.db #0x07	; 7
      000013 07                    1218 	.db #0x07	; 7
      000014 07                    1219 	.db #0x07	; 7
      000015 05                    1220 	.db #0x05	; 5
      000016 05                    1221 	.db #0x05	; 5
      000017 05                    1222 	.db #0x05	; 5
      000018 05                    1223 	.db #0x05	; 5
      000019 05                    1224 	.db #0x05	; 5
      00001A 05                    1225 	.db #0x05	; 5
      00001B 05                    1226 	.db #0x05	; 5
      00001C 05                    1227 	.db #0x05	; 5
      00001D 05                    1228 	.db #0x05	; 5
      00001E 05                    1229 	.db #0x05	; 5
      00001F 05                    1230 	.db #0x05	; 5
      000020 05                    1231 	.db #0x05	; 5
      000021 05                    1232 	.db #0x05	; 5
      000022 05                    1233 	.db #0x05	; 5
      000023 05                    1234 	.db #0x05	; 5
      000024 05                    1235 	.db #0x05	; 5
      000025 05                    1236 	.db #0x05	; 5
      000026 05                    1237 	.db #0x05	; 5
      000027 07                    1238 	.db #0x07	; 7
      000028 07                    1239 	.db #0x07	; 7
      000029 05                    1240 	.db #0x05	; 5
      00002A 05                    1241 	.db #0x05	; 5
      00002B 05                    1242 	.db #0x05	; 5
      00002C 05                    1243 	.db #0x05	; 5
      00002D 05                    1244 	.db #0x05	; 5
      00002E 05                    1245 	.db #0x05	; 5
      00002F 05                    1246 	.db #0x05	; 5
      000030 05                    1247 	.db #0x05	; 5
      000031 05                    1248 	.db #0x05	; 5
      000032 05                    1249 	.db #0x05	; 5
      000033 05                    1250 	.db #0x05	; 5
      000034 05                    1251 	.db #0x05	; 5
      000035 05                    1252 	.db #0x05	; 5
      000036 05                    1253 	.db #0x05	; 5
      000037 05                    1254 	.db #0x05	; 5
      000038 05                    1255 	.db #0x05	; 5
      000039 05                    1256 	.db #0x05	; 5
      00003A 05                    1257 	.db #0x05	; 5
      00003B 07                    1258 	.db #0x07	; 7
      00003C 07                    1259 	.db #0x07	; 7
      00003D 05                    1260 	.db #0x05	; 5
      00003E 05                    1261 	.db #0x05	; 5
      00003F 05                    1262 	.db #0x05	; 5
      000040 05                    1263 	.db #0x05	; 5
      000041 05                    1264 	.db #0x05	; 5
      000042 05                    1265 	.db #0x05	; 5
      000043 05                    1266 	.db #0x05	; 5
      000044 05                    1267 	.db #0x05	; 5
      000045 05                    1268 	.db #0x05	; 5
      000046 05                    1269 	.db #0x05	; 5
      000047 05                    1270 	.db #0x05	; 5
      000048 05                    1271 	.db #0x05	; 5
      000049 05                    1272 	.db #0x05	; 5
      00004A 05                    1273 	.db #0x05	; 5
      00004B 05                    1274 	.db #0x05	; 5
      00004C 05                    1275 	.db #0x05	; 5
      00004D 05                    1276 	.db #0x05	; 5
      00004E 05                    1277 	.db #0x05	; 5
      00004F 07                    1278 	.db #0x07	; 7
      000050 07                    1279 	.db #0x07	; 7
      000051 05                    1280 	.db #0x05	; 5
      000052 00                    1281 	.db #0x00	; 0
      000053 00                    1282 	.db #0x00	; 0
      000054 0E                    1283 	.db #0x0e	; 14
      000055 0E                    1284 	.db #0x0e	; 14
      000056 0E                    1285 	.db #0x0e	; 14
      000057 0E                    1286 	.db #0x0e	; 14
      000058 00                    1287 	.db #0x00	; 0
      000059 00                    1288 	.db #0x00	; 0
      00005A 00                    1289 	.db #0x00	; 0
      00005B 00                    1290 	.db #0x00	; 0
      00005C 0E                    1291 	.db #0x0e	; 14
      00005D 0E                    1292 	.db #0x0e	; 14
      00005E 0E                    1293 	.db #0x0e	; 14
      00005F 0E                    1294 	.db #0x0e	; 14
      000060 00                    1295 	.db #0x00	; 0
      000061 00                    1296 	.db #0x00	; 0
      000062 05                    1297 	.db #0x05	; 5
      000063 07                    1298 	.db #0x07	; 7
      000064 07                    1299 	.db #0x07	; 7
      000065 05                    1300 	.db #0x05	; 5
      000066 00                    1301 	.db #0x00	; 0
      000067 00                    1302 	.db #0x00	; 0
      000068 0D                    1303 	.db #0x0d	; 13
      000069 0D                    1304 	.db #0x0d	; 13
      00006A 0D                    1305 	.db #0x0d	; 13
      00006B 0D                    1306 	.db #0x0d	; 13
      00006C 00                    1307 	.db #0x00	; 0
      00006D 00                    1308 	.db #0x00	; 0
      00006E 00                    1309 	.db #0x00	; 0
      00006F 00                    1310 	.db #0x00	; 0
      000070 0D                    1311 	.db #0x0d	; 13
      000071 0D                    1312 	.db #0x0d	; 13
      000072 0D                    1313 	.db #0x0d	; 13
      000073 0D                    1314 	.db #0x0d	; 13
      000074 00                    1315 	.db #0x00	; 0
      000075 00                    1316 	.db #0x00	; 0
      000076 05                    1317 	.db #0x05	; 5
      000077 07                    1318 	.db #0x07	; 7
      000078 07                    1319 	.db #0x07	; 7
      000079 05                    1320 	.db #0x05	; 5
      00007A 00                    1321 	.db #0x00	; 0
      00007B 00                    1322 	.db #0x00	; 0
      00007C 00                    1323 	.db #0x00	; 0
      00007D 00                    1324 	.db #0x00	; 0
      00007E 00                    1325 	.db #0x00	; 0
      00007F 00                    1326 	.db #0x00	; 0
      000080 00                    1327 	.db #0x00	; 0
      000081 00                    1328 	.db #0x00	; 0
      000082 00                    1329 	.db #0x00	; 0
      000083 00                    1330 	.db #0x00	; 0
      000084 00                    1331 	.db #0x00	; 0
      000085 00                    1332 	.db #0x00	; 0
      000086 00                    1333 	.db #0x00	; 0
      000087 00                    1334 	.db #0x00	; 0
      000088 00                    1335 	.db #0x00	; 0
      000089 00                    1336 	.db #0x00	; 0
      00008A 05                    1337 	.db #0x05	; 5
      00008B 07                    1338 	.db #0x07	; 7
      00008C 07                    1339 	.db #0x07	; 7
      00008D 05                    1340 	.db #0x05	; 5
      00008E 0C                    1341 	.db #0x0c	; 12
      00008F 0C                    1342 	.db #0x0c	; 12
      000090 0C                    1343 	.db #0x0c	; 12
      000091 0C                    1344 	.db #0x0c	; 12
      000092 0C                    1345 	.db #0x0c	; 12
      000093 00                    1346 	.db #0x00	; 0
      000094 00                    1347 	.db #0x00	; 0
      000095 00                    1348 	.db #0x00	; 0
      000096 00                    1349 	.db #0x00	; 0
      000097 00                    1350 	.db #0x00	; 0
      000098 00                    1351 	.db #0x00	; 0
      000099 00                    1352 	.db #0x00	; 0
      00009A 00                    1353 	.db #0x00	; 0
      00009B 00                    1354 	.db #0x00	; 0
      00009C 00                    1355 	.db #0x00	; 0
      00009D 00                    1356 	.db #0x00	; 0
      00009E 05                    1357 	.db #0x05	; 5
      00009F 07                    1358 	.db #0x07	; 7
      0000A0 07                    1359 	.db #0x07	; 7
      0000A1 05                    1360 	.db #0x05	; 5
      0000A2 09                    1361 	.db #0x09	; 9
      0000A3 09                    1362 	.db #0x09	; 9
      0000A4 09                    1363 	.db #0x09	; 9
      0000A5 09                    1364 	.db #0x09	; 9
      0000A6 09                    1365 	.db #0x09	; 9
      0000A7 00                    1366 	.db #0x00	; 0
      0000A8 00                    1367 	.db #0x00	; 0
      0000A9 00                    1368 	.db #0x00	; 0
      0000AA 00                    1369 	.db #0x00	; 0
      0000AB 00                    1370 	.db #0x00	; 0
      0000AC 00                    1371 	.db #0x00	; 0
      0000AD 08                    1372 	.db #0x08	; 8
      0000AE 08                    1373 	.db #0x08	; 8
      0000AF 08                    1374 	.db #0x08	; 8
      0000B0 08                    1375 	.db #0x08	; 8
      0000B1 08                    1376 	.db #0x08	; 8
      0000B2 05                    1377 	.db #0x05	; 5
      0000B3 07                    1378 	.db #0x07	; 7
      0000B4 07                    1379 	.db #0x07	; 7
      0000B5 05                    1380 	.db #0x05	; 5
      0000B6 00                    1381 	.db #0x00	; 0
      0000B7 00                    1382 	.db #0x00	; 0
      0000B8 00                    1383 	.db #0x00	; 0
      0000B9 00                    1384 	.db #0x00	; 0
      0000BA 00                    1385 	.db #0x00	; 0
      0000BB 00                    1386 	.db #0x00	; 0
      0000BC 00                    1387 	.db #0x00	; 0
      0000BD 00                    1388 	.db #0x00	; 0
      0000BE 00                    1389 	.db #0x00	; 0
      0000BF 00                    1390 	.db #0x00	; 0
      0000C0 00                    1391 	.db #0x00	; 0
      0000C1 00                    1392 	.db #0x00	; 0
      0000C2 00                    1393 	.db #0x00	; 0
      0000C3 00                    1394 	.db #0x00	; 0
      0000C4 00                    1395 	.db #0x00	; 0
      0000C5 00                    1396 	.db #0x00	; 0
      0000C6 05                    1397 	.db #0x05	; 5
      0000C7 07                    1398 	.db #0x07	; 7
      0000C8 07                    1399 	.db #0x07	; 7
      0000C9 05                    1400 	.db #0x05	; 5
      0000CA 00                    1401 	.db #0x00	; 0
      0000CB 00                    1402 	.db #0x00	; 0
      0000CC 00                    1403 	.db #0x00	; 0
      0000CD 00                    1404 	.db #0x00	; 0
      0000CE 00                    1405 	.db #0x00	; 0
      0000CF 00                    1406 	.db #0x00	; 0
      0000D0 00                    1407 	.db #0x00	; 0
      0000D1 00                    1408 	.db #0x00	; 0
      0000D2 00                    1409 	.db #0x00	; 0
      0000D3 00                    1410 	.db #0x00	; 0
      0000D4 00                    1411 	.db #0x00	; 0
      0000D5 00                    1412 	.db #0x00	; 0
      0000D6 00                    1413 	.db #0x00	; 0
      0000D7 00                    1414 	.db #0x00	; 0
      0000D8 00                    1415 	.db #0x00	; 0
      0000D9 00                    1416 	.db #0x00	; 0
      0000DA 05                    1417 	.db #0x05	; 5
      0000DB 07                    1418 	.db #0x07	; 7
      0000DC 07                    1419 	.db #0x07	; 7
      0000DD 05                    1420 	.db #0x05	; 5
      0000DE 00                    1421 	.db #0x00	; 0
      0000DF 00                    1422 	.db #0x00	; 0
      0000E0 10                    1423 	.db #0x10	; 16
      0000E1 00                    1424 	.db #0x00	; 0
      0000E2 00                    1425 	.db #0x00	; 0
      0000E3 10                    1426 	.db #0x10	; 16
      0000E4 00                    1427 	.db #0x00	; 0
      0000E5 00                    1428 	.db #0x00	; 0
      0000E6 00                    1429 	.db #0x00	; 0
      0000E7 00                    1430 	.db #0x00	; 0
      0000E8 10                    1431 	.db #0x10	; 16
      0000E9 00                    1432 	.db #0x00	; 0
      0000EA 00                    1433 	.db #0x00	; 0
      0000EB 10                    1434 	.db #0x10	; 16
      0000EC 00                    1435 	.db #0x00	; 0
      0000ED 00                    1436 	.db #0x00	; 0
      0000EE 05                    1437 	.db #0x05	; 5
      0000EF 07                    1438 	.db #0x07	; 7
      0000F0 07                    1439 	.db #0x07	; 7
      0000F1 05                    1440 	.db #0x05	; 5
      0000F2 00                    1441 	.db #0x00	; 0
      0000F3 00                    1442 	.db #0x00	; 0
      0000F4 0F                    1443 	.db #0x0f	; 15
      0000F5 00                    1444 	.db #0x00	; 0
      0000F6 00                    1445 	.db #0x00	; 0
      0000F7 11                    1446 	.db #0x11	; 17
      0000F8 00                    1447 	.db #0x00	; 0
      0000F9 00                    1448 	.db #0x00	; 0
      0000FA 00                    1449 	.db #0x00	; 0
      0000FB 00                    1450 	.db #0x00	; 0
      0000FC 11                    1451 	.db #0x11	; 17
      0000FD 00                    1452 	.db #0x00	; 0
      0000FE 00                    1453 	.db #0x00	; 0
      0000FF 0F                    1454 	.db #0x0f	; 15
      000100 00                    1455 	.db #0x00	; 0
      000101 00                    1456 	.db #0x00	; 0
      000102 05                    1457 	.db #0x05	; 5
      000103 07                    1458 	.db #0x07	; 7
      000104 07                    1459 	.db #0x07	; 7
      000105 00                    1460 	.db #0x00	; 0
      000106 02                    1461 	.db #0x02	; 2
      000107 03                    1462 	.db #0x03	; 3
      000108 03                    1463 	.db #0x03	; 3
      000109 03                    1464 	.db #0x03	; 3
      00010A 03                    1465 	.db #0x03	; 3
      00010B 03                    1466 	.db #0x03	; 3
      00010C 03                    1467 	.db #0x03	; 3
      00010D 03                    1468 	.db #0x03	; 3
      00010E 03                    1469 	.db #0x03	; 3
      00010F 03                    1470 	.db #0x03	; 3
      000110 03                    1471 	.db #0x03	; 3
      000111 03                    1472 	.db #0x03	; 3
      000112 03                    1473 	.db #0x03	; 3
      000113 03                    1474 	.db #0x03	; 3
      000114 03                    1475 	.db #0x03	; 3
      000115 04                    1476 	.db #0x04	; 4
      000116 00                    1477 	.db #0x00	; 0
      000117 07                    1478 	.db #0x07	; 7
      000118 07                    1479 	.db #0x07	; 7
      000119 00                    1480 	.db #0x00	; 0
      00011A 06                    1481 	.db #0x06	; 6
      00011B 06                    1482 	.db #0x06	; 6
      00011C 06                    1483 	.db #0x06	; 6
      00011D 06                    1484 	.db #0x06	; 6
      00011E 06                    1485 	.db #0x06	; 6
      00011F 06                    1486 	.db #0x06	; 6
      000120 06                    1487 	.db #0x06	; 6
      000121 06                    1488 	.db #0x06	; 6
      000122 06                    1489 	.db #0x06	; 6
      000123 06                    1490 	.db #0x06	; 6
      000124 06                    1491 	.db #0x06	; 6
      000125 06                    1492 	.db #0x06	; 6
      000126 06                    1493 	.db #0x06	; 6
      000127 06                    1494 	.db #0x06	; 6
      000128 06                    1495 	.db #0x06	; 6
      000129 06                    1496 	.db #0x06	; 6
      00012A 00                    1497 	.db #0x00	; 0
      00012B 07                    1498 	.db #0x07	; 7
      00012C 07                    1499 	.db #0x07	; 7
      00012D 00                    1500 	.db #0x00	; 0
      00012E 06                    1501 	.db #0x06	; 6
      00012F 06                    1502 	.db #0x06	; 6
      000130 06                    1503 	.db #0x06	; 6
      000131 06                    1504 	.db #0x06	; 6
      000132 06                    1505 	.db #0x06	; 6
      000133 06                    1506 	.db #0x06	; 6
      000134 06                    1507 	.db #0x06	; 6
      000135 06                    1508 	.db #0x06	; 6
      000136 06                    1509 	.db #0x06	; 6
      000137 06                    1510 	.db #0x06	; 6
      000138 06                    1511 	.db #0x06	; 6
      000139 06                    1512 	.db #0x06	; 6
      00013A 06                    1513 	.db #0x06	; 6
      00013B 06                    1514 	.db #0x06	; 6
      00013C 06                    1515 	.db #0x06	; 6
      00013D 06                    1516 	.db #0x06	; 6
      00013E 00                    1517 	.db #0x00	; 0
      00013F 07                    1518 	.db #0x07	; 7
      000140 07                    1519 	.db #0x07	; 7
      000141 01                    1520 	.db #0x01	; 1
      000142 06                    1521 	.db #0x06	; 6
      000143 06                    1522 	.db #0x06	; 6
      000144 06                    1523 	.db #0x06	; 6
      000145 06                    1524 	.db #0x06	; 6
      000146 06                    1525 	.db #0x06	; 6
      000147 06                    1526 	.db #0x06	; 6
      000148 06                    1527 	.db #0x06	; 6
      000149 06                    1528 	.db #0x06	; 6
      00014A 06                    1529 	.db #0x06	; 6
      00014B 06                    1530 	.db #0x06	; 6
      00014C 06                    1531 	.db #0x06	; 6
      00014D 06                    1532 	.db #0x06	; 6
      00014E 06                    1533 	.db #0x06	; 6
      00014F 06                    1534 	.db #0x06	; 6
      000150 06                    1535 	.db #0x06	; 6
      000151 06                    1536 	.db #0x06	; 6
      000152 01                    1537 	.db #0x01	; 1
      000153 07                    1538 	.db #0x07	; 7
      000154 05                    1539 	.db #0x05	; 5
      000155 05                    1540 	.db #0x05	; 5
      000156 05                    1541 	.db #0x05	; 5
      000157 05                    1542 	.db #0x05	; 5
      000158 05                    1543 	.db #0x05	; 5
      000159 05                    1544 	.db #0x05	; 5
      00015A 05                    1545 	.db #0x05	; 5
      00015B 05                    1546 	.db #0x05	; 5
      00015C 05                    1547 	.db #0x05	; 5
      00015D 05                    1548 	.db #0x05	; 5
      00015E 05                    1549 	.db #0x05	; 5
      00015F 05                    1550 	.db #0x05	; 5
      000160 05                    1551 	.db #0x05	; 5
      000161 05                    1552 	.db #0x05	; 5
      000162 05                    1553 	.db #0x05	; 5
      000163 05                    1554 	.db #0x05	; 5
      000164 05                    1555 	.db #0x05	; 5
      000165 05                    1556 	.db #0x05	; 5
      000166 05                    1557 	.db #0x05	; 5
      000167 05                    1558 	.db #0x05	; 5
      000168                       1559 __xinit__BackgroundTiles:
      000168 00                    1560 	.db #0x00	; 0
      000169 00                    1561 	.db #0x00	; 0
      00016A 00                    1562 	.db #0x00	; 0
      00016B 00                    1563 	.db #0x00	; 0
      00016C 00                    1564 	.db #0x00	; 0
      00016D 00                    1565 	.db #0x00	; 0
      00016E 00                    1566 	.db #0x00	; 0
      00016F 00                    1567 	.db #0x00	; 0
      000170 00                    1568 	.db #0x00	; 0
      000171 00                    1569 	.db #0x00	; 0
      000172 00                    1570 	.db #0x00	; 0
      000173 00                    1571 	.db #0x00	; 0
      000174 00                    1572 	.db #0x00	; 0
      000175 00                    1573 	.db #0x00	; 0
      000176 00                    1574 	.db #0x00	; 0
      000177 00                    1575 	.db #0x00	; 0
      000178 00                    1576 	.db #0x00	; 0
      000179 00                    1577 	.db #0x00	; 0
      00017A 00                    1578 	.db #0x00	; 0
      00017B 00                    1579 	.db #0x00	; 0
      00017C 00                    1580 	.db #0x00	; 0
      00017D 00                    1581 	.db #0x00	; 0
      00017E 00                    1582 	.db #0x00	; 0
      00017F 00                    1583 	.db #0x00	; 0
      000180 00                    1584 	.db #0x00	; 0
      000181 00                    1585 	.db #0x00	; 0
      000182 FF                    1586 	.db #0xff	; 255
      000183 FF                    1587 	.db #0xff	; 255
      000184 00                    1588 	.db #0x00	; 0
      000185 FF                    1589 	.db #0xff	; 255
      000186 FF                    1590 	.db #0xff	; 255
      000187 00                    1591 	.db #0x00	; 0
      000188 7F                    1592 	.db #0x7f	; 127
      000189 7F                    1593 	.db #0x7f	; 127
      00018A AA                    1594 	.db #0xaa	; 170
      00018B D5                    1595 	.db #0xd5	; 213
      00018C AA                    1596 	.db #0xaa	; 170
      00018D D5                    1597 	.db #0xd5	; 213
      00018E AA                    1598 	.db #0xaa	; 170
      00018F D5                    1599 	.db #0xd5	; 213
      000190 AA                    1600 	.db #0xaa	; 170
      000191 D5                    1601 	.db #0xd5	; 213
      000192 AA                    1602 	.db #0xaa	; 170
      000193 D5                    1603 	.db #0xd5	; 213
      000194 AA                    1604 	.db #0xaa	; 170
      000195 D5                    1605 	.db #0xd5	; 213
      000196 AA                    1606 	.db #0xaa	; 170
      000197 D5                    1607 	.db #0xd5	; 213
      000198 FF                    1608 	.db #0xff	; 255
      000199 FF                    1609 	.db #0xff	; 255
      00019A AA                    1610 	.db #0xaa	; 170
      00019B 55                    1611 	.db #0x55	; 85	'U'
      00019C AA                    1612 	.db #0xaa	; 170
      00019D 55                    1613 	.db #0x55	; 85	'U'
      00019E AA                    1614 	.db #0xaa	; 170
      00019F 55                    1615 	.db #0x55	; 85	'U'
      0001A0 AA                    1616 	.db #0xaa	; 170
      0001A1 55                    1617 	.db #0x55	; 85	'U'
      0001A2 AA                    1618 	.db #0xaa	; 170
      0001A3 55                    1619 	.db #0x55	; 85	'U'
      0001A4 AA                    1620 	.db #0xaa	; 170
      0001A5 55                    1621 	.db #0x55	; 85	'U'
      0001A6 AA                    1622 	.db #0xaa	; 170
      0001A7 55                    1623 	.db #0x55	; 85	'U'
      0001A8 FE                    1624 	.db #0xfe	; 254
      0001A9 FE                    1625 	.db #0xfe	; 254
      0001AA AB                    1626 	.db #0xab	; 171
      0001AB 55                    1627 	.db #0x55	; 85	'U'
      0001AC AB                    1628 	.db #0xab	; 171
      0001AD 55                    1629 	.db #0x55	; 85	'U'
      0001AE AB                    1630 	.db #0xab	; 171
      0001AF 55                    1631 	.db #0x55	; 85	'U'
      0001B0 AB                    1632 	.db #0xab	; 171
      0001B1 55                    1633 	.db #0x55	; 85	'U'
      0001B2 AB                    1634 	.db #0xab	; 171
      0001B3 55                    1635 	.db #0x55	; 85	'U'
      0001B4 AB                    1636 	.db #0xab	; 171
      0001B5 55                    1637 	.db #0x55	; 85	'U'
      0001B6 AB                    1638 	.db #0xab	; 171
      0001B7 55                    1639 	.db #0x55	; 85	'U'
      0001B8 00                    1640 	.db #0x00	; 0
      0001B9 FF                    1641 	.db #0xff	; 255
      0001BA 00                    1642 	.db #0x00	; 0
      0001BB FF                    1643 	.db #0xff	; 255
      0001BC 00                    1644 	.db #0x00	; 0
      0001BD FF                    1645 	.db #0xff	; 255
      0001BE 00                    1646 	.db #0x00	; 0
      0001BF FF                    1647 	.db #0xff	; 255
      0001C0 00                    1648 	.db #0x00	; 0
      0001C1 FF                    1649 	.db #0xff	; 255
      0001C2 00                    1650 	.db #0x00	; 0
      0001C3 FF                    1651 	.db #0xff	; 255
      0001C4 00                    1652 	.db #0x00	; 0
      0001C5 FF                    1653 	.db #0xff	; 255
      0001C6 00                    1654 	.db #0x00	; 0
      0001C7 FF                    1655 	.db #0xff	; 255
      0001C8 FF                    1656 	.db #0xff	; 255
      0001C9 00                    1657 	.db #0x00	; 0
      0001CA FF                    1658 	.db #0xff	; 255
      0001CB 00                    1659 	.db #0x00	; 0
      0001CC FF                    1660 	.db #0xff	; 255
      0001CD 00                    1661 	.db #0x00	; 0
      0001CE FF                    1662 	.db #0xff	; 255
      0001CF 00                    1663 	.db #0x00	; 0
      0001D0 FF                    1664 	.db #0xff	; 255
      0001D1 00                    1665 	.db #0x00	; 0
      0001D2 FF                    1666 	.db #0xff	; 255
      0001D3 00                    1667 	.db #0x00	; 0
      0001D4 FF                    1668 	.db #0xff	; 255
      0001D5 00                    1669 	.db #0x00	; 0
      0001D6 FF                    1670 	.db #0xff	; 255
      0001D7 00                    1671 	.db #0x00	; 0
      0001D8 FF                    1672 	.db #0xff	; 255
      0001D9 FF                    1673 	.db #0xff	; 255
      0001DA FF                    1674 	.db #0xff	; 255
      0001DB FF                    1675 	.db #0xff	; 255
      0001DC FF                    1676 	.db #0xff	; 255
      0001DD FF                    1677 	.db #0xff	; 255
      0001DE FF                    1678 	.db #0xff	; 255
      0001DF FF                    1679 	.db #0xff	; 255
      0001E0 FF                    1680 	.db #0xff	; 255
      0001E1 FF                    1681 	.db #0xff	; 255
      0001E2 FF                    1682 	.db #0xff	; 255
      0001E3 FF                    1683 	.db #0xff	; 255
      0001E4 FF                    1684 	.db #0xff	; 255
      0001E5 FF                    1685 	.db #0xff	; 255
      0001E6 FF                    1686 	.db #0xff	; 255
      0001E7 FF                    1687 	.db #0xff	; 255
      0001E8 7E                    1688 	.db #0x7e	; 126
      0001E9 42                    1689 	.db #0x42	; 66	'B'
      0001EA 3C                    1690 	.db #0x3c	; 60
      0001EB 24                    1691 	.db #0x24	; 36
      0001EC 18                    1692 	.db #0x18	; 24
      0001ED 18                    1693 	.db #0x18	; 24
      0001EE 18                    1694 	.db #0x18	; 24
      0001EF 18                    1695 	.db #0x18	; 24
      0001F0 3C                    1696 	.db #0x3c	; 60
      0001F1 3C                    1697 	.db #0x3c	; 60
      0001F2 00                    1698 	.db #0x00	; 0
      0001F3 FF                    1699 	.db #0xff	; 255
      0001F4 FF                    1700 	.db #0xff	; 255
      0001F5 00                    1701 	.db #0x00	; 0
      0001F6 FF                    1702 	.db #0xff	; 255
      0001F7 00                    1703 	.db #0x00	; 0
      0001F8 42                    1704 	.db #0x42	; 66	'B'
      0001F9 42                    1705 	.db #0x42	; 66	'B'
      0001FA 42                    1706 	.db #0x42	; 66	'B'
      0001FB 42                    1707 	.db #0x42	; 66	'B'
      0001FC 42                    1708 	.db #0x42	; 66	'B'
      0001FD 42                    1709 	.db #0x42	; 66	'B'
      0001FE 42                    1710 	.db #0x42	; 66	'B'
      0001FF 42                    1711 	.db #0x42	; 66	'B'
      000200 3C                    1712 	.db #0x3c	; 60
      000201 3C                    1713 	.db #0x3c	; 60
      000202 00                    1714 	.db #0x00	; 0
      000203 FF                    1715 	.db #0xff	; 255
      000204 FF                    1716 	.db #0xff	; 255
      000205 00                    1717 	.db #0x00	; 0
      000206 FF                    1718 	.db #0xff	; 255
      000207 00                    1719 	.db #0x00	; 0
      000208 7E                    1720 	.db #0x7e	; 126
      000209 42                    1721 	.db #0x42	; 66	'B'
      00020A 7E                    1722 	.db #0x7e	; 126
      00020B 42                    1723 	.db #0x42	; 66	'B'
      00020C 7E                    1724 	.db #0x7e	; 126
      00020D 42                    1725 	.db #0x42	; 66	'B'
      00020E 7E                    1726 	.db #0x7e	; 126
      00020F 42                    1727 	.db #0x42	; 66	'B'
      000210 3C                    1728 	.db #0x3c	; 60
      000211 3C                    1729 	.db #0x3c	; 60
      000212 00                    1730 	.db #0x00	; 0
      000213 FF                    1731 	.db #0xff	; 255
      000214 FF                    1732 	.db #0xff	; 255
      000215 00                    1733 	.db #0x00	; 0
      000216 FF                    1734 	.db #0xff	; 255
      000217 00                    1735 	.db #0x00	; 0
      000218 00                    1736 	.db #0x00	; 0
      000219 00                    1737 	.db #0x00	; 0
      00021A 00                    1738 	.db #0x00	; 0
      00021B 00                    1739 	.db #0x00	; 0
      00021C 00                    1740 	.db #0x00	; 0
      00021D 00                    1741 	.db #0x00	; 0
      00021E 00                    1742 	.db #0x00	; 0
      00021F 00                    1743 	.db #0x00	; 0
      000220 00                    1744 	.db #0x00	; 0
      000221 00                    1745 	.db #0x00	; 0
      000222 00                    1746 	.db #0x00	; 0
      000223 00                    1747 	.db #0x00	; 0
      000224 00                    1748 	.db #0x00	; 0
      000225 00                    1749 	.db #0x00	; 0
      000226 42                    1750 	.db #0x42	; 66	'B'
      000227 7E                    1751 	.db #0x7e	; 126
      000228 00                    1752 	.db #0x00	; 0
      000229 00                    1753 	.db #0x00	; 0
      00022A 00                    1754 	.db #0x00	; 0
      00022B 00                    1755 	.db #0x00	; 0
      00022C 00                    1756 	.db #0x00	; 0
      00022D 00                    1757 	.db #0x00	; 0
      00022E 00                    1758 	.db #0x00	; 0
      00022F 00                    1759 	.db #0x00	; 0
      000230 00                    1760 	.db #0x00	; 0
      000231 00                    1761 	.db #0x00	; 0
      000232 00                    1762 	.db #0x00	; 0
      000233 00                    1763 	.db #0x00	; 0
      000234 00                    1764 	.db #0x00	; 0
      000235 00                    1765 	.db #0x00	; 0
      000236 42                    1766 	.db #0x42	; 66	'B'
      000237 42                    1767 	.db #0x42	; 66	'B'
      000238 7E                    1768 	.db #0x7e	; 126
      000239 4A                    1769 	.db #0x4a	; 74	'J'
      00023A 7E                    1770 	.db #0x7e	; 126
      00023B 52                    1771 	.db #0x52	; 82	'R'
      00023C 42                    1772 	.db #0x42	; 66	'B'
      00023D 7E                    1773 	.db #0x7e	; 126
      00023E 42                    1774 	.db #0x42	; 66	'B'
      00023F 7E                    1775 	.db #0x7e	; 126
      000240 7E                    1776 	.db #0x7e	; 126
      000241 7E                    1777 	.db #0x7e	; 126
      000242 00                    1778 	.db #0x00	; 0
      000243 FF                    1779 	.db #0xff	; 255
      000244 FF                    1780 	.db #0xff	; 255
      000245 00                    1781 	.db #0x00	; 0
      000246 FF                    1782 	.db #0xff	; 255
      000247 00                    1783 	.db #0x00	; 0
      000248 00                    1784 	.db #0x00	; 0
      000249 00                    1785 	.db #0x00	; 0
      00024A 00                    1786 	.db #0x00	; 0
      00024B 00                    1787 	.db #0x00	; 0
      00024C 00                    1788 	.db #0x00	; 0
      00024D 00                    1789 	.db #0x00	; 0
      00024E 18                    1790 	.db #0x18	; 24
      00024F 00                    1791 	.db #0x00	; 0
      000250 18                    1792 	.db #0x18	; 24
      000251 18                    1793 	.db #0x18	; 24
      000252 18                    1794 	.db #0x18	; 24
      000253 18                    1795 	.db #0x18	; 24
      000254 24                    1796 	.db #0x24	; 36
      000255 3C                    1797 	.db #0x3c	; 60
      000256 42                    1798 	.db #0x42	; 66	'B'
      000257 7E                    1799 	.db #0x7e	; 126
      000258 3C                    1800 	.db #0x3c	; 60
      000259 3C                    1801 	.db #0x3c	; 60
      00025A 3C                    1802 	.db #0x3c	; 60
      00025B 3C                    1803 	.db #0x3c	; 60
      00025C 3C                    1804 	.db #0x3c	; 60
      00025D 00                    1805 	.db #0x00	; 0
      00025E 42                    1806 	.db #0x42	; 66	'B'
      00025F 3C                    1807 	.db #0x3c	; 60
      000260 42                    1808 	.db #0x42	; 66	'B'
      000261 3C                    1809 	.db #0x3c	; 60
      000262 42                    1810 	.db #0x42	; 66	'B'
      000263 3C                    1811 	.db #0x3c	; 60
      000264 3C                    1812 	.db #0x3c	; 60
      000265 00                    1813 	.db #0x00	; 0
      000266 3C                    1814 	.db #0x3c	; 60
      000267 3C                    1815 	.db #0x3c	; 60
      000268 00                    1816 	.db #0x00	; 0
      000269 00                    1817 	.db #0x00	; 0
      00026A 00                    1818 	.db #0x00	; 0
      00026B 00                    1819 	.db #0x00	; 0
      00026C 00                    1820 	.db #0x00	; 0
      00026D 00                    1821 	.db #0x00	; 0
      00026E 00                    1822 	.db #0x00	; 0
      00026F 00                    1823 	.db #0x00	; 0
      000270 00                    1824 	.db #0x00	; 0
      000271 00                    1825 	.db #0x00	; 0
      000272 00                    1826 	.db #0x00	; 0
      000273 00                    1827 	.db #0x00	; 0
      000274 00                    1828 	.db #0x00	; 0
      000275 00                    1829 	.db #0x00	; 0
      000276 18                    1830 	.db #0x18	; 24
      000277 18                    1831 	.db #0x18	; 24
      000278 3C                    1832 	.db #0x3c	; 60
      000279 3C                    1833 	.db #0x3c	; 60
      00027A 3C                    1834 	.db #0x3c	; 60
      00027B 00                    1835 	.db #0x00	; 0
      00027C 66                    1836 	.db #0x66	; 102	'f'
      00027D 18                    1837 	.db #0x18	; 24
      00027E A5                    1838 	.db #0xa5	; 165
      00027F 5A                    1839 	.db #0x5a	; 90	'Z'
      000280 A5                    1840 	.db #0xa5	; 165
      000281 5A                    1841 	.db #0x5a	; 90	'Z'
      000282 66                    1842 	.db #0x66	; 102	'f'
      000283 18                    1843 	.db #0x18	; 24
      000284 3C                    1844 	.db #0x3c	; 60
      000285 00                    1845 	.db #0x00	; 0
      000286 3C                    1846 	.db #0x3c	; 60
      000287 3C                    1847 	.db #0x3c	; 60
      000288 00                    1848 	.db #0x00	; 0
      000289 00                    1849 	.db #0x00	; 0
      00028A 00                    1850 	.db #0x00	; 0
      00028B 00                    1851 	.db #0x00	; 0
      00028C 00                    1852 	.db #0x00	; 0
      00028D 00                    1853 	.db #0x00	; 0
      00028E 00                    1854 	.db #0x00	; 0
      00028F 00                    1855 	.db #0x00	; 0
      000290 00                    1856 	.db #0x00	; 0
      000291 00                    1857 	.db #0x00	; 0
      000292 00                    1858 	.db #0x00	; 0
      000293 00                    1859 	.db #0x00	; 0
      000294 00                    1860 	.db #0x00	; 0
      000295 00                    1861 	.db #0x00	; 0
      000296 00                    1862 	.db #0x00	; 0
      000297 00                    1863 	.db #0x00	; 0
      000298                       1864 __xinit__Bartender:
      000298 07                    1865 	.db #0x07	; 7
      000299 07                    1866 	.db #0x07	; 7
      00029A 08                    1867 	.db #0x08	; 8
      00029B 08                    1868 	.db #0x08	; 8
      00029C 0A                    1869 	.db #0x0a	; 10
      00029D 0A                    1870 	.db #0x0a	; 10
      00029E 1A                    1871 	.db #0x1a	; 26
      00029F 1A                    1872 	.db #0x1a	; 26
      0002A0 10                    1873 	.db #0x10	; 16
      0002A1 10                    1874 	.db #0x10	; 16
      0002A2 09                    1875 	.db #0x09	; 9
      0002A3 09                    1876 	.db #0x09	; 9
      0002A4 0C                    1877 	.db #0x0c	; 12
      0002A5 0C                    1878 	.db #0x0c	; 12
      0002A6 1E                    1879 	.db #0x1e	; 30
      0002A7 11                    1880 	.db #0x11	; 17
      0002A8 E0                    1881 	.db #0xe0	; 224
      0002A9 E0                    1882 	.db #0xe0	; 224
      0002AA 10                    1883 	.db #0x10	; 16
      0002AB 10                    1884 	.db #0x10	; 16
      0002AC 50                    1885 	.db #0x50	; 80	'P'
      0002AD 50                    1886 	.db #0x50	; 80	'P'
      0002AE 58                    1887 	.db #0x58	; 88	'X'
      0002AF 58                    1888 	.db #0x58	; 88	'X'
      0002B0 08                    1889 	.db #0x08	; 8
      0002B1 08                    1890 	.db #0x08	; 8
      0002B2 90                    1891 	.db #0x90	; 144
      0002B3 90                    1892 	.db #0x90	; 144
      0002B4 30                    1893 	.db #0x30	; 48	'0'
      0002B5 30                    1894 	.db #0x30	; 48	'0'
      0002B6 78                    1895 	.db #0x78	; 120	'x'
      0002B7 88                    1896 	.db #0x88	; 136
      0002B8 3F                    1897 	.db #0x3f	; 63
      0002B9 20                    1898 	.db #0x20	; 32
      0002BA 3F                    1899 	.db #0x3f	; 63
      0002BB 28                    1900 	.db #0x28	; 40
      0002BC 3F                    1901 	.db #0x3f	; 63
      0002BD 28                    1902 	.db #0x28	; 40
      0002BE 2F                    1903 	.db #0x2f	; 47
      0002BF 38                    1904 	.db #0x38	; 56	'8'
      0002C0 29                    1905 	.db #0x29	; 41
      0002C1 3F                    1906 	.db #0x3f	; 63
      0002C2 12                    1907 	.db #0x12	; 18
      0002C3 16                    1908 	.db #0x16	; 22
      0002C4 0A                    1909 	.db #0x0a	; 10
      0002C5 0E                    1910 	.db #0x0e	; 14
      0002C6 12                    1911 	.db #0x12	; 18
      0002C7 1E                    1912 	.db #0x1e	; 30
      0002C8 FC                    1913 	.db #0xfc	; 252
      0002C9 04                    1914 	.db #0x04	; 4
      0002CA FC                    1915 	.db #0xfc	; 252
      0002CB 14                    1916 	.db #0x14	; 20
      0002CC FC                    1917 	.db #0xfc	; 252
      0002CD 14                    1918 	.db #0x14	; 20
      0002CE F4                    1919 	.db #0xf4	; 244
      0002CF 1C                    1920 	.db #0x1c	; 28
      0002D0 94                    1921 	.db #0x94	; 148
      0002D1 FC                    1922 	.db #0xfc	; 252
      0002D2 48                    1923 	.db #0x48	; 72	'H'
      0002D3 68                    1924 	.db #0x68	; 104	'h'
      0002D4 50                    1925 	.db #0x50	; 80	'P'
      0002D5 70                    1926 	.db #0x70	; 112	'p'
      0002D6 48                    1927 	.db #0x48	; 72	'H'
      0002D7 78                    1928 	.db #0x78	; 120	'x'
      0002D8                       1929 __xinit__Wine:
      0002D8 42                    1930 	.db #0x42	; 66	'B'
      0002D9 7E                    1931 	.db #0x7e	; 126
      0002DA 42                    1932 	.db #0x42	; 66	'B'
      0002DB 7E                    1933 	.db #0x7e	; 126
      0002DC 42                    1934 	.db #0x42	; 66	'B'
      0002DD 7E                    1935 	.db #0x7e	; 126
      0002DE 3C                    1936 	.db #0x3c	; 60
      0002DF 3C                    1937 	.db #0x3c	; 60
      0002E0 18                    1938 	.db #0x18	; 24
      0002E1 18                    1939 	.db #0x18	; 24
      0002E2 18                    1940 	.db #0x18	; 24
      0002E3 18                    1941 	.db #0x18	; 24
      0002E4 18                    1942 	.db #0x18	; 24
      0002E5 18                    1943 	.db #0x18	; 24
      0002E6 3C                    1944 	.db #0x3c	; 60
      0002E7 3C                    1945 	.db #0x3c	; 60
                                   1946 	.area _CABS (ABS)
